{"version":3,"sources":["UI/Header.js","img/logo.svg","UI/Theme.js","UI/fighterPage.js","UI/statistics.js","App.js","index.js"],"names":["HideOnScroll","props","children","trigger","useScrollTrigger","appear","direction","in","useStyle","makeStyles","theme","toolbarMargin","mixins","toolbar","marginBottom","breakpoints","down","logo","width","height","tabContainer","marginRight","tab","typography","minWidth","marginLeft","futureLogo","estimate","borderRadius","color","logoContainer","padding","backgroundColor","menu","palette","common","arcBlue","MenuItem","opacity","drawerIcon","drawerIconContainer","drawer","black","drawerItem","drawerItemSelected","drawerItemEstimate","arcOrange","Header","classes","useTheme","matches","useMediaQuery","iOS","process","browser","test","navigator","userAgent","useState","openDrawer","setOpenDrawer","window","location","pathname","value","setValue","tabs","Fragment","onChange","e","className","indicatorColor","component","Link","to","label","paper","disableBackdropTransition","disableDiscovery","open","onClose","onOpen","disablePadding","onClick","divider","button","selected","disableTypography","disableRipple","position","disableGutters","src","alt","silkwhite","createMuiTheme","orange","primary","main","secondary","fontFamily","textTransform","fontWeight","fontSize","h2","lineHeight","h3","h4","subtitle1","GridRow","Grid","container","Item","item","ProfessorMMA","state","data_test","data_test2","IPV4_SRC_ADDR","L4_SRC_PORT","IPV4_DST_ADDR","L4_DST_PORT","PROTOCOL","L7_PROTO","IN_BYTES","OUT_BYTES","IN_PKTS","OUT_PKTS","TCP_FLAGS","FLOW_DURATION_MILLISECONDS","Label","Attack","simulationData","graph","simulation_sample","selected_quanltity","FighterA","FighterB","Response","Response1","Favourite","UnderDog","favWin","undWin","draw","getQuantity","bind","getFighterB","postData","setGraph","multi_simulation","a","axios","get","res","data","console","log","i","length","undefined","push","this","setState","getOptions","name","param","qauntity","Number","binary_result","type_result","rand","Math","random","toFixed","setTimeout","indexB","selectOptionsNames","indexOf","Name","Height","WEIGHT","REACH","STANCE","DOB","SLpM","strikeAccuracy","StrAcc","SApM","strDef","tdAvg","tdAcc","tdDef","subAvg","require","url","method","headers","form","then","response","fighterA","fighterB","MAIN_BINARY","random_forest_prediction","RAND_PREDICTIOB","skorch_prediction","SKORCH_PREDICTION","catch","index","uv","pv","amt","bullet","Box","p","xs","spacing","lg","Card","elevation","Win","Loss","root","CardActionArea","CardActions","justify","alignItems","Typography","variant","ResponsiveContainer","ComposedChart","layout","margin","top","right","bottom","left","CartesianGrid","stroke","XAxis","type","YAxis","dataKey","scale","Tooltip","Legend","Area","fill","Bar","barSize","Line","Paper","styles","Autocomplete","id","options","style","event","renderInput","params","TextField","htmlFor","Button","size","ref","myButton","React","Component","withStyles","display","flexWrap","marginTop","minHeight","transform","title","pos","GridCol","Statistics","chart","charttwo","radarB","getFighterA","nameData","heightData","StrikeAcc","FighterData","HEIGHT","indexA","radar_one","slice","concat","min","max","convertRange","radar_two","subject","A","B","fullMark","getOptionLabel","option","CardContent","RadarChart","cx","cy","outerRadius","PolarGrid","PolarAngleAxis","PolarRadiusAxis","angle","domain","Radar","fillOpacity","BarChart","stackOffset","strokeDasharray","ReferenceLine","y","stackId","PureComponent","App","ThemeProvider","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2da763d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { AppBar } from '@material-ui/core'\r\nimport { Toolbar } from '@material-ui/core'\r\n// import { Typography } from '@material-ui/core'\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport logo from '../img/logo.svg'\r\nimport { Tabs, Tab } from '@material-ui/core'\r\nimport { Button } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\nimport { Menu, MenuItem } from '@material-ui/core'\r\nimport {useMediaQuery}  from '@material-ui/core'\r\nimport {useTheme}  from '@material-ui/core'\r\nimport  {SwipeableDrawer} from  '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport {IconButton} from '@material-ui/core'\r\nimport {List,ListItem,ListItemText} from '@material-ui/core'\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\n\r\n\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children} = props;\r\n\r\n  const trigger = useScrollTrigger();\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n  toolbarMargin: {\r\n    ...theme.mixins.toolbar,\r\n    marginBottom: \"2em\",\r\n    [theme.breakpoints.down(\"xs\")]:{\r\n      marginBottom: \"1.5em\",\r\n\r\n    },\r\n  },\r\n  logo: {\r\n    // height:\"100px\",\r\n    width: \"3em\",\r\n    [theme.breakpoints.down(\"md\")]:{\r\n      height: \"3em\",\r\n      width: \"7em\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]:{\r\n      height: \"5.5em\",\r\n      width: \"19em\",\r\n\r\n    },\r\n\r\n  },\r\n  tabContainer: {\r\n    marginRight: \"auto\"\r\n  },\r\n  tab: {\r\n    ...theme.typography.tab,\r\n    minWidth: 10,\r\n    marginLeft: \"25px\",\r\n  },\r\n  futureLogo: {\r\n    ...theme.typography.estimate,\r\n    borderRadius: \"50px\",\r\n    marginLeft: \"50px\",\r\n    marginRight: \"25px\",\r\n    height: \"45px\",\r\n    color: \"white\"\r\n  },\r\n  logoContainer: {\r\n    padding: 0,\r\n    \"&:hoover\": {\r\n      backgroundColor: \"transparent\"\r\n    }\r\n  },\r\n  menu:{\r\n    backgroundColor: theme.palette.common.arcBlue,\r\n    color:\"white\",\r\n  },\r\n  MenuItem :{\r\n    ...theme.typography.tab,\r\n    color:'green',\r\n    opacity:1,\r\n    \"&:hover\":{\r\n      opacity:1,\r\n    }\r\n  },\r\n  drawerIcon:{\r\n    height:\"45px\",\r\n    width:\"45px\",\r\n  },\r\n\r\n  drawerIconContainer:{\r\n    \"&:hover\":{\r\n      backgroundColor:\"transparent\"\r\n    },\r\n    marginRight: \"auto\",\r\n  },\r\n  drawer: {\r\n    backgroundColor: theme.palette.common.black,\r\n\r\n  },\r\n  drawerItem:{\r\n    ...theme.typography.tab,\r\n    color:\"white\",\r\n    opacity: 0.7,\r\n  },\r\n  drawerItemSelected:{\r\n    \"& .MuiListItemText-root\":{\r\n          color:\"green\",\r\n      opacity: 1}\r\n  },\r\n  drawerItemEstimate:{\r\n    backgroundColor: theme.palette.common.arcOrange,\r\n\r\n  },\r\n\r\n}));\r\n\r\n\r\nfunction Header(props) {\r\n  const classes = useStyle();\r\n  const theme  = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n\r\n  // use state explain\r\n  const [openDrawer, setOpenDrawer] = useState(false)\r\n\r\n\r\n\r\n  // Reload function & tracking\r\n\r\n    const handleChange = (e ,value) => {\r\n    props.setValue(value)\r\n  }\r\n  //gets the url and see if it matches\r\n  switch(window.location.pathname){\r\n    case \"/\":\r\n      if (props.value !==0){\r\n       props.setValue(0)\r\n      }\r\n      break;\r\n    case \"/Project\":\r\n      if (props.value !==1){\r\n       props.setValue(1)\r\n\r\n      }\r\n    break;\r\n\r\n    case \"/chart\":\r\n      if (props.value !==2){\r\n        props.setValue(2)\r\n      }\r\n    break;\r\n    case \"/contact\":\r\n        if (props.value !==3){\r\n       props.setValue(3)\r\n      }\r\n    break;\r\n\r\n    default:\r\n      break;\r\n\r\n  }\r\n\r\n\r\n\r\n  const tabs = (\r\n    <React.Fragment>\r\n      <Tabs value={ props.value} onChange={handleChange} className={classes.tabContainer} indicatorColor=\"secondary\">\r\n           <Tab  className={classes.tab} component={Link}   to=\"/\" label=\"Home\" />\r\n           <Tab className={classes.tab} component={Link}  to=\"/Project\" label=\"ProfessorM.M.A\" />\r\n           <Tab className={classes.tab} component={Link} to=\"/chart\" label=\"Player Statistics\" />\r\n           <Tab className={classes.tab} component={Link} to=\"/contact\" label=\"Contact\" />\r\n      </Tabs>\r\n    </React.Fragment>\r\n\r\n  )\r\n\r\n  const drawer = (\r\n    <React.Fragment>\r\n        <SwipeableDrawer classes ={{paper: classes.drawer}} disableBackdropTransition={!iOS} disableDiscovery={iOS} open ={openDrawer} onClose={() => {setOpenDrawer(false);  props.setValue(0)}} onOpen ={() => setOpenDrawer(true)} >\r\n          <div className={classes.toolbarMargin}/>\r\n          <List disablePadding>\r\n            <ListItem  key = { props.value} onClick={() =>{ setOpenDrawer(false);  props.setValue(0) }} divider button component= {Link} to =\"/\" selected = { props.value === 0} classes ={{selected: classes.drawerItemSelected}}>\r\n              <ListItemText className = {classes.drawerItem} disableTypography>\r\n                  Home\r\n              </ListItemText>\r\n            </ListItem>\r\n\r\n            <ListItem  key = { props.value}  onClick={() => {setOpenDrawer(false);  props.setValue(1)}} divider button component= {Link} to =\"/Project\" selected = { props.value === 1} classes ={{selected: classes.drawerItemSelected}}>\r\n              <ListItemText className = {classes.drawerItem} disableTypography>\r\n                Professor M.M.A\r\n              </ListItemText>\r\n            </ListItem>\r\n\r\n            <ListItem key = { props.value}  onClick={() => {setOpenDrawer(false);  props.setValue(2)}}  divider button component= {Link} to =\"/chart\" selected = { props.value === 2} classes ={{selected: classes.drawerItemSelected}}>\r\n              <ListItemText className = {classes.drawerItem} disableTypography>\r\n                Player Statistics\r\n              </ListItemText>\r\n            </ListItem>\r\n\r\n\r\n            <ListItem key = { props.value}  onClick={() => {setOpenDrawer(false);  props.setValue(4)}}  divider button  component= {Link} to =\"/contact\" selected = { props.value === 3} classes ={{selected: classes.drawerItemSelected}}>\r\n              <ListItemText className = {classes.drawerItem} disableTypography>\r\n                  Contact\r\n              </ListItemText>\r\n            </ListItem>\r\n\r\n\r\n          </List>\r\n\r\n        </SwipeableDrawer>\r\n        <IconButton className={classes.drawerIconContainer} onClick={() => setOpenDrawer (!openDrawer)} disableRipple>\r\n            <MenuIcon className ={classes.drawerIcon}/>\r\n        </IconButton>\r\n    </React.Fragment>\r\n\r\n  )\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <HideOnScroll {...props}>\r\n        <AppBar position=\"fixed\" >\r\n          <Toolbar disableGutters>\r\n\r\n            {matches ? drawer : tabs}\r\n            <Button component={Link} to=\"/\" className={classes.logoContainer} onClick={() =>  props.setValue(0)} disableRipple>\r\n              <img src={logo} alt=\"Logo\" className={classes.logo} />\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n       <Toolbar />\r\n      <div className={classes.toolbarMargin}></div>\r\n    </React.Fragment>\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/logo.f626c697.svg\";","import { orange } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst silkwhite =\"#FFFFFF\";\r\nconst arcOrange = \"#FFBA60\";\r\nconst arcGrey = \"#868686\"\r\n\r\nexport default createMuiTheme({\r\n    palette:{\r\n        common:{\r\n            arcBlue: `${silkwhite}`,\r\n            arcOrange: `${arcOrange}`,\r\n            black: \"black\",\r\n            orange:\"orange\"\r\n        },\r\n        primary:{\r\n            main: `${silkwhite}`\r\n        },\r\n        secondary:{\r\n            main: `${arcOrange}`\r\n\r\n        }\r\n    },\r\n    typography:{\r\n        tab:{\r\n            fontFamily: \"Raleway\",\r\n            textTransform: \"none\",\r\n            fontWeight:700,\r\n            fontSize: \"1rem\",\r\n         \r\n        },\r\n        estimate: {\r\n            fontFamily:\"Pacifico\",\r\n            fontSize:\"1rem\",\r\n            textTransform:\"none\",\r\n        },\r\n        h2:{\r\n            fontFamily:\"Raleway\",\r\n            fontWeight: 700,\r\n            fontSize: \"2.5rem\",\r\n            color:`${silkwhite}`,\r\n            lineHeight: 1.5\r\n\r\n        },\r\n        h3:{\r\n            fontFamily:\"Pacifico\",\r\n            fontSize: \"2.5rem\",\r\n            color:`${silkwhite}`,\r\n        },\r\n        h4:{\r\n            fontFamily:\"Raleway\",\r\n            fontWeight: 700,\r\n            fontSize: \"1.75rem\",\r\n            color:`${silkwhite}`,\r\n        },\r\n        subtitle1:{\r\n            fontFamily:\"Raleway\",\r\n            fontWeight: 400,\r\n            fontSize: \"1.25rem\",\r\n            color:`${arcGrey}`,\r\n        },\r\n    }\r\n    \r\n})\r\n","/* eslint-disable no-use-before-define */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport axios from \"axios\";\r\nimport FighterData from \"../DATA/fighterDataset.json\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {\r\n  ComposedChart,\r\n  Line,\r\n  Area,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\n// abstract Grid\r\n\r\nconst Grids = (props) => <Grid container {...props} />;\r\nconst GridCol = (props) => <Grid container direction=\"column\" {...props} />;\r\nconst GridRow = (props) => <Grid container direction=\"row\" {...props} />;\r\nconst Item = (props) => <Grid item {...props} />;\r\n\r\nconst useStyle = (theme) => ({\r\n  toolbarMargin: {\r\n    ...theme.mixins.toolbar,\r\n    marginBottom: \"1em\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginBottom: \"1.5em\",\r\n    },\r\n  },\r\n  logo: {\r\n    // height:\"100px\",\r\n    width: \"16em\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      height: \"5em\",\r\n      width: \"17em\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      height: \"5.5em\",\r\n      width: \"19em\",\r\n    },\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      marginTop: theme.spacing(200),\r\n      margin: theme.spacing(30),\r\n      width: theme.spacing(300),\r\n      height: theme.spacing(16),\r\n    },\r\n  },\r\n  root: {\r\n    backgroundColor: \"#FAFAFA\",\r\n    minWidth: 1750,\r\n    minHeight: 500,\r\n  },\r\n  Win: {\r\n    backgroundColor: \"#47ff63\",\r\n    minWidth: 1750,\r\n    minHeight: 500,\r\n  },\r\n  Loss: {\r\n    backgroundColor: \"#F0A89C\",\r\n    minWidth: 1750,\r\n    minHeight: 500,\r\n  },\r\n  draw: {\r\n    backgroundColor: \"#F0E79C\",\r\n    minWidth: 1750,\r\n    minHeight: 500,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nclass ProfessorMMA extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      //Data from Backend\r\n      data_test:1000,\r\n      data_test2:[100],\r\n      IPV4_SRC_ADDR : [],\r\n      L4_SRC_PORT : [],\r\n      IPV4_DST_ADDR : [],\r\n      L4_DST_PORT : [],\r\n      PROTOCOL : [],\r\n      L7_PROTO : [],\r\n      IN_BYTES : [],\r\n      OUT_BYTES : [],\r\n      IN_PKTS : [],\r\n      OUT_PKTS : [],\r\n      TCP_FLAGS : [],\r\n      FLOW_DURATION_MILLISECONDS : [200],\r\n      Label : [],\r\n      Attack : [],\r\n      //data for graph and backend\r\n      simulationData:[],\r\n      graph:[],\r\n      simulation_sample:['2','10','100','200'],\r\n      selected_quanltity:1,\r\n      //old\r\n      FighterA: [],\r\n      FighterB: [],\r\n      Response: false,\r\n      Response1: false,\r\n      Favourite: \"\",\r\n      UnderDog: \"\",\r\n      favWin: false,\r\n      undWin: false,\r\n      draw: false,\r\n    };\r\n    this.getQuantity = this.getQuantity.bind(this);\r\n    this.getFighterB = this.getFighterB.bind(this);\r\n    this.postData = this.postData.bind(this);\r\n    this.setGraph = this.setGraph.bind(this);\r\n    this.multi_simulation = this.multi_simulation.bind(this);\r\n    // this.inputElement = this.inputElement.bind(this);\r\n\r\n    \r\n    \r\n  }\r\n\r\n  // Pulls data from the back end and store in React Compnent prod env\r\n  async getOptions() {\r\n    const res = await axios.get(\r\n      \"/static/csvjson.json\"\r\n    );\r\n\r\n  // Dev Env\r\n    // const res = await axios.get('http://127.0.0.1:5000//static/csvjson.json')\r\n\r\n    const data = res.data;\r\n\r\n    console.log(data.FLOW_DURATION_MILLISECONDS);\r\n\r\n    const IPV4_SRC_ADDR = [];\r\n    const L4_SRC_PORT = [];\r\n    const IPV4_DST_ADDR = [];\r\n    const L4_DST_PORT = [];\r\n    const PROTOCOL = [];\r\n    const L7_PROTO = [];\r\n    const IN_BYTES = [];\r\n    const OUT_BYTES = [];\r\n    const IN_PKTS = [];\r\n    const OUT_PKTS = [];\r\n    const TCP_FLAGS = [];\r\n    const FLOW_DURATION_MILLISECONDS = [];\r\n    const Label = [];\r\n    const Attack = [];\r\n\r\n    // for (let i = 0; i < 6000; i++) {\r\n    //   // console.log(FighterData.Name[i])\r\n    //   if (FighterData.Name[i] !== undefined) {\r\n    //     nameData.push({ Name: FighterData.Name[i] });\r\n    //     heightData.push({ Height: FighterData.HEIGHT[i] });\r\n    //     StrikeAcc.push({ StrAcc: FighterData[\"Str. Acc..\"][i] });\r\n    //     DOB.push({ DOB: FighterData.DOB[i] });\r\n    //     SApM.push({ SApM: FighterData.SApM[i] });\r\n    //     SLpM.push({ SLpM: FighterData.SLpM[i] });\r\n    //     REACH.push({ REACH: FighterData.REACH[i] });\r\n    //     STANCE.push({ STANCE: FighterData.STANCE[i] });\r\n    //     WEIGHT.push({ WEIGHT: FighterData.WEIGHT[i] });\r\n    //     strDef.push({ strDef: FighterData[\"Str. Def\"][i] });\r\n    //     tdAcc.push({ tdAcc: FighterData[\"TD Acc\"][i] });\r\n    //     subAvg.push({ subAvg: FighterData[\"Sub. Avg\"][i] });\r\n    //     tdDef.push({ tdDef: FighterData[\"TD Def.\"][i] });\r\n    //     tdAvg.push({ tdAvg: FighterData[\"TD Avg\"][i] });\r\n    //   }\r\n    // }\r\n\r\n    for (let i = 0; i < res.data.length; i++) {\r\n      // console.log(data[i][\"IPV4_SRC_ADDR\"])\r\n      if (data[i][\"IPV4_SRC_ADDR\"] !== undefined) {\r\n        // IPV4_SRC_ADDR.push(data[\"IPV4_SRC_ADDR\"][i]);\r\n        IPV4_SRC_ADDR.push({ IPV4_SRC_ADDR:data[i][\"IPV4_SRC_ADDR\"] });\r\n        L4_SRC_PORT.push({ L4_SRC_PORT:data[i][\"L4_SRC_PORT\"] });\r\n        IPV4_DST_ADDR.push({ IPV4_DST_ADDR:data[i][\"IPV4_DST_ADDR\"] });\r\n        L4_DST_PORT.push({ L4_DST_PORT:data[i][\"L4_DST_PORT\"] });\r\n        PROTOCOL.push({ PROTOCOL:data[i][\"PROTOCOL\"] });\r\n        L7_PROTO.push({ L7_PROTO:data[i][\"L7_PROTO\"] });\r\n        IN_BYTES.push({ IN_BYTES:data[i][\"IN_BYTES\"] });\r\n        OUT_BYTES.push({ OUT_BYTES:data[i][\"OUT_BYTES\"] });\r\n        IN_PKTS.push({ IN_PKTS:data[i][\"IN_PKTS\"] });\r\n        OUT_PKTS.push({ OUT_PKTS:data[i][\"OUT_PKTS\"] });\r\n        TCP_FLAGS.push({ TCP_FLAGS:data[i][\"TCP_FLAGS\"] });\r\n        FLOW_DURATION_MILLISECONDS.push({ FLOW_DURATION_MILLISECONDS:data[i][\"FLOW_DURATION_MILLISECONDS\"] });\r\n        Label.push({ Label:data[i][\"Label\"] });\r\n        Attack.push({ Attack:data[i][\"Attack\"] });\r\n\r\n        // console.log({ L4_SRC_PORT })\r\n        // console.log({ IPV4_SRC_ADDR })\r\n        // console.log({FLOW_DURATION_MILLISECONDS})\r\n\r\n\r\n\r\n      }\r\n      \r\n\r\n      \r\n    }\r\n\r\n    this.setState({ IPV4_SRC_ADDR: IPV4_SRC_ADDR });\r\n    this.setState({ L4_SRC_PORT: L4_SRC_PORT });\r\n    this.setState({ IPV4_DST_ADDR: IPV4_DST_ADDR });\r\n    this.setState({ L4_DST_PORT: L4_DST_PORT });\r\n    this.setState({ PROTOCOL: PROTOCOL });\r\n    this.setState({ L7_PROTO: L7_PROTO });\r\n    this.setState({ IN_BYTES: IN_BYTES });\r\n    this.setState({ OUT_BYTES: OUT_BYTES });\r\n    this.setState({ IN_PKTS: IN_PKTS });\r\n    this.setState({ OUT_PKTS: OUT_PKTS });\r\n    this.setState({ TCP_FLAGS: TCP_FLAGS });\r\n    this.setState({ FLOW_DURATION_MILLISECONDS: FLOW_DURATION_MILLISECONDS });\r\n    this.setState({ Label: Label });\r\n    this.setState({ Attack: Attack });\r\n  \r\n  }\r\n\r\n  // pull the data when the compenent loads\r\n  componentDidMount() {\r\n    this.getOptions();\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ name: e.label });\r\n  }\r\n\r\n  getQuantity(param) {\r\n    const qauntity = Number(param)\r\n    console.log(\"quantity selected\", qauntity)\r\n    this.setState({ selected_quanltity: qauntity });\r\n  }\r\n\r\n  setGraph(i) \r\n  {\r\n    const graph = [];\r\n    const simulationData=[];\r\n    const binary_result =[];\r\n    const type_result = []; \r\n    const min = 0;\r\n    const max = 15000;\r\n    let rand = min + Math.random() * (max - min)\r\n     rand = rand.toFixed();\r\n  \r\n\r\n    \r\n    \r\n    graph.push(this.state.FLOW_DURATION_MILLISECONDS[rand].FLOW_DURATION_MILLISECONDS);\r\n    graph.push(this.state.OUT_PKTS[rand].OUT_PKTS);\r\n    graph.push(this.state.IN_PKTS[rand].IN_PKTS);\r\n    graph.push(this.state.OUT_BYTES[rand].OUT_BYTES);\r\n    graph.push(this.state.IN_BYTES[rand].IN_BYTES);\r\n    graph.push(this.state.TCP_FLAGS[rand].TCP_FLAGS);\r\n    graph.push(this.state.L7_PROTO[rand].L7_PROTO);\r\n\r\n\r\n\r\n   \r\n\r\n    // [\"IPV4_SRC_ADDR\",\"L4_SRC_PORT\",\"IPV4_DST_ADDR\",\"L4_DST_PORT\",\"PROTOCOL\",\"L7_PROTO\",\r\n    //                    \"IN_BYTES\",\"OUT_BYTES\",\"IN_PKTS\",\"OUT_PKTS\",\"TCP_FLAGS\",\"FLOW_DURATION_MILLISECONDS\"\r\n    //                     ]\r\n\r\n    simulationData.push(this.state.IPV4_SRC_ADDR[rand].IPV4_SRC_ADDR);\r\n    simulationData.push(this.state.L4_SRC_PORT[rand].L4_SRC_PORT);\r\n    simulationData.push(this.state.IPV4_DST_ADDR[rand].IPV4_DST_ADDR);\r\n    simulationData.push(this.state.L4_DST_PORT[rand].L4_DST_PORT);\r\n    simulationData.push(this.state.PROTOCOL[rand].PROTOCOL);\r\n    simulationData.push(this.state.L7_PROTO[rand].L7_PROTO);\r\n    simulationData.push(this.state.IN_BYTES[rand].IN_BYTES);\r\n    simulationData.push(this.state.OUT_BYTES[rand].OUT_BYTES);\r\n    simulationData.push(this.state.IN_PKTS[rand].IN_PKTS);\r\n    simulationData.push(this.state.OUT_PKTS[rand].OUT_PKTS);\r\n    simulationData.push(this.state.TCP_FLAGS[rand].TCP_FLAGS);\r\n    simulationData.push(this.state.FLOW_DURATION_MILLISECONDS[rand].FLOW_DURATION_MILLISECONDS);\r\n\r\n\r\n\r\n \r\n\r\n     setTimeout(() => {\r\n      console.log(\"rand:\"+rand);\r\n\r\n      console.log(\"simulation data: \", i);\r\n\r\n        \r\n        this.setState({simulationData:simulationData});\r\n        console.log(\"Simulation data!!!!!!!!!!\"+ simulationData);\r\n\r\n        this.postData(simulationData)\r\n\r\n\r\n        this.setState({graph:graph});\r\n        console.log(\"graph!!!!!!!!!!!!!!!!!!!!!!!!!!!!\"+graph)\r\n\r\n        console.log(\"Binary Result\", binary_result, \"  type of attack\", type_result);\r\n\r\n\r\n\r\n       \r\n      }, 2000)\r\n\r\n  \r\n      \r\n\r\n\r\n\r\n    binary_result.push(this.state.Label[rand].Label);\r\n    type_result.push(this.state.Attack[rand].Attack);\r\n\r\n    // console.log(\"Result Data !!!!!!!!!\");\r\n    \r\n    \r\n    \r\n    // this.postData()\r\n    // console.log(\"posted !!!!!!!!!\");\r\n\r\n\r\n  }\r\n\r\n  getFighterB(param) {\r\n    const indexB = this.state.selectOptionsNames.indexOf(param);\r\n    const FighterB = [];\r\n    if (indexB !== -1) {\r\n      // this.setState({FighterB:[]}) // reset array before setting new data\r\n      FighterB.push(this.state.selectOptionsNames[indexB].Name);\r\n      FighterB.push(this.state.height[indexB].Height);\r\n      FighterB.push(this.state.WEIGHT[indexB].WEIGHT);\r\n      FighterB.push(this.state.REACH[indexB].REACH);\r\n      FighterB.push(this.state.STANCE[indexB].STANCE);\r\n      FighterB.push(this.state.DOB[indexB].DOB);\r\n      FighterB.push(this.state.SLpM[indexB].SLpM);\r\n      FighterB.push(this.state.strikeAccuracy[indexB].StrAcc);\r\n      FighterB.push(this.state.SApM[indexB].SApM);\r\n      FighterB.push(this.state.strDef[indexB].strDef);\r\n      FighterB.push(this.state.tdAvg[indexB].tdAvg);\r\n      FighterB.push(this.state.tdAcc[indexB].tdAcc);\r\n      FighterB.push(this.state.tdDef[indexB].tdDef);\r\n      FighterB.push(this.state.subAvg[indexB].subAvg);\r\n    }\r\n    this.setState({ FighterB: FighterB });\r\n    this.setState({ Response1: false });\r\n    this.setState({ undWin: \"\" });\r\n    this.setState({ draw: \"\" });\r\n  }\r\n\r\n  async postData(data) {\r\n    setTimeout(() => {\r\n\r\n      let predictData;\r\n\r\n    // if (this.state.FighterA.length > 0 && this.state.FighterB.length > 0) {\r\n    //   predictData = this.state.FighterA.concat(this.state.FighterB);\r\n    // }\r\n\r\n\r\n\r\n    predictData = this.state.simulationData;\r\n\r\n    const axios = require(\"axios\");\r\n\r\n    // axios.post('http://localhost:5000/predict', predictData)\r\n    //   .then(function (response) {\r\n    //     console.log(response);\r\n    //   })\r\n\r\n    const res = axios({\r\n      //prod env\r\n      url: \"/api/react_api\",\r\n      //dev env\r\n      // url: \"http://127.0.0.1:5000//api/react_api\",\r\n      method: \"POST\",\r\n      data: data,\r\n      // `headers` are custom headers to be sent\r\n      headers: { form: \"form\" },\r\n    })\r\n      .then((response) => {\r\n        let fighterA = '';\r\n        let fighterB = '';\r\n        predictData = this.state.simulationData;\r\n\r\n\r\n    // this.setState({graph:[]});\r\n    // this.setState({simulationDatsa:[]});\r\n\r\n\r\n\r\n        console.log(\"Result\",response.data);\r\n        console.log(\"File has been sent to the server \");\r\n        this.setState({ Response: true });\r\n        this.setState({ Response1: true });\r\n\r\n        let main_predicition = response.data.MAIN_BINARY;\r\n        let random_forest_prediction = response.data.RAND_PREDICTIOB;\r\n        let skorch_prediction = response.data.SKORCH_PREDICTION;\r\n\r\n\r\n        if (random_forest_prediction !== \"Draw\" && skorch_prediction !== \"Draw\") {\r\n          fighterA = Number(random_forest_prediction);\r\n          fighterB = Number(skorch_prediction);\r\n\r\n          if (fighterA > fighterB) {\r\n            this.setState({ favWin: true });\r\n            this.setState({ undWin: false });\r\n          } else {\r\n            this.setState({ undWin: true });\r\n            this.setState({ favWin: false });\r\n          }\r\n        } else {\r\n          this.setState({ draw: true });\r\n        }\r\n\r\n        this.setState({ Favourite: fighterA });\r\n        this.setState({ UnderDog: fighterB });\r\n      })\r\n      .catch(() => {\r\n        console.log(\"internal Server Error\");\r\n      });\r\n\r\n    console.log(\"Prediction Data: \",data);\r\n    }, 1000)\r\n\r\n    \r\n\r\n    // console.log(res)\r\n  }\r\n\r\n\r\n  \r\n// multiple simulation\r\n   multi_simulation() {\r\n    console.log(\"I work\");\r\n   \r\n    let index = this.state.selected_quanltity\r\n    \r\n   while(index >0)\r\n   {\r\n    if(index != 0)\r\n    {\r\n      \r\n      // this.myButton.click()\r\n      this.setGraph(index);\r\n\r\n\r\n    }\r\n    // this.postData()\r\n    // setTimeout(() => {\r\n    //   this.postData();\r\n\r\n    // }, 1000)\r\n\r\n\r\n    index--;\r\n\r\n   }\r\n   \r\n\r\n    \r\n  }\r\n\r\n  // const Grids = (props) => <Grid container {...props} />\r\n  // const GridCol = (props) => <Grid container direction ='column'{...props} />\r\n  // const GridRow = (props) => <Grid container direction ='row'{...props} />\r\n  // const Item = (props) => <Grid item {...props} />\r\n\r\n  render() {\r\n    const data = [\r\n      {\r\n        name: \"FLOW_DURATION\",\r\n        uv: 0,\r\n        pv:  this.state.graph[0],\r\n        amt: this.state.graph[0],\r\n      },\r\n      {\r\n        name: \"OUT_PKTS\",\r\n        uv: 0,\r\n        pv:  this.state.graph[1],\r\n        amt: this.state.graph[1],\r\n      },\r\n      {\r\n        name: \"IN_PKTS\",\r\n        uv: 0,\r\n        pv:  this.state.graph[2],\r\n        amt: this.state.graph[2],\r\n      },\r\n      {\r\n        name: \"OUT_BYTES\",\r\n        uv: 0,\r\n        pv:  this.state.graph[3],\r\n        amt: this.state.graph[3],\r\n      },\r\n      {\r\n        name: \"IN_BYTES\",\r\n        uv: 0,\r\n        pv:  this.state.graph[4],\r\n        amt: this.state.graph[4],\r\n      },\r\n      {\r\n        name: \"TCP_FLAGS\",\r\n        uv: 0,\r\n        pv:  this.state.graph[5],\r\n        amt: this.state.graph[5],\r\n      },\r\n      {\r\n        name: \"L7_PROTO\",\r\n        uv: 0,\r\n        pv:  this.state.graph[6],\r\n        amt: this.state.graph[6],\r\n      },\r\n    ];\r\n\r\n    const { classes } = this.props;\r\n    const bull = <span className={classes.bullet}>•</span>;\r\n    return (\r\n      <React.Fragment>\r\n        <Box p={5}>\r\n          <GridRow>\r\n            <Item xs={12}>\r\n              <GridRow spacing={10}>\r\n                <Item xs={12} lg={6}>\r\n                  <Card\r\n                    elevation={6}\r\n                    className={\r\n                      this.state.Response\r\n                        ? this.state.draw\r\n                          ? classes.draw\r\n                          : this.state.favWin\r\n                          ? classes.Win\r\n                          : classes.Loss\r\n                        : classes.root\r\n                    }\r\n                  >\r\n                    <CardActionArea>\r\n                      <CardActions>\r\n                      \r\n                        <GridRow justify=\"center\" alignItems=\"center\">\r\n                        <Typography variant=\"h7\" component=\"h1\">\r\n                            DATA \r\n                          </Typography>\r\n                          <Item xs={12}>\r\n                            <ResponsiveContainer width={1200} height={500}>\r\n                              <ComposedChart\r\n                                layout=\"vertical\"\r\n                                width={600}\r\n                                height={400}\r\n                                data={data}\r\n                                margin={{\r\n                                  top: 20,\r\n                                  right: 100,\r\n                                  bottom: 20,\r\n                                  left: 100,\r\n                                }}\r\n                              >\r\n                                <CartesianGrid stroke=\"#f5f5f5\" />\r\n                                <XAxis type=\"number\" />\r\n                                <YAxis\r\n                                  dataKey=\"name\"\r\n                                  type=\"category\"\r\n                                  scale=\"band\"\r\n                                />\r\n                                <Tooltip />\r\n                                <Legend />\r\n                                <Area\r\n                                  dataKey=\"amt\"\r\n                                  fill=\"#8884d8\"\r\n                                  stroke=\"#8884d8\"\r\n                                />\r\n                                <Bar dataKey=\"pv\" barSize={20} fill=\"#413ea0\" />\r\n                                <Line dataKey=\"uv\" stroke=\"#ff7300\" />\r\n                              </ComposedChart>\r\n                            </ResponsiveContainer>\r\n                          </Item>\r\n                        </GridRow>\r\n                      </CardActions>\r\n                    </CardActionArea>\r\n                  </Card>\r\n                  <GridRow>\r\n                    <Item>\r\n                      <Box p={1.5}>\r\n                        <Paper styles={classes.paper}>\r\n                          <Autocomplete\r\n                            id=\"FighterA\"\r\n                            options={this.state.simulation_sample}\r\n                            // getOptionLabel={(option) => option.Name}\r\n                            style={{ width: 500 }}\r\n                            onChange={(event, value) => this.getQuantity(value)} // sends Index of selected Item Fighter A\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Simulation Quantity\"\r\n                                variant=\"outlined\"\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Paper>\r\n                      </Box>\r\n\r\n                      <Item\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                      >\r\n                        <label htmlFor=\"contained-button-file\">\r\n                          <Button\r\n                            size=\"large\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.postData}\r\n                            component=\"span\"\r\n                          >\r\n                            Simulate\r\n                          </Button>\r\n                          <Button\r\n                            size=\"large\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.setGraph}\r\n                            component=\"span\"\r\n                            ref={(ref) => { this.myButton = ref; }}\r\n                          >\r\n                            Graph test\r\n                          </Button>\r\n                          <Button\r\n                            size=\"large\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.multi_simulation}\r\n                            component=\"span\"\r\n                          >\r\n                            Multiple simulation\r\n                          </Button>\r\n\r\n                          \r\n                        </label>\r\n                        <h1>{/*{this.state.Response}*/}</h1>\r\n                      </Item>\r\n                    </Item>\r\n                  </GridRow>\r\n                </Item>\r\n              </GridRow>\r\n            </Item>\r\n          </GridRow>\r\n        </Box>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// export default class ComboBox\r\nexport default withStyles(useStyle)(ProfessorMMA);\r\n","/* eslint-disable no-use-before-define */\r\nimport React,{useEffect,useState} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios'\r\nimport FighterData from '../DATA/fighterDataset.json'\r\nimport { Button } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box'\r\n// import { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip} from 'recharts';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  Cell,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ReferenceLine,\r\n} from 'recharts';\r\n\r\nimport { Radar, RadarChart, PolarGrid, Legend, PolarAngleAxis, PolarRadiusAxis, ResponsiveContainer } from 'recharts';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\n\r\n\r\n\r\n\r\n      // abstract Grid\r\n\r\n     const Grids = (props) => <Grid container {...props} />\r\n     const GridCol = (props) => <Grid container direction ='column'{...props} />\r\n     const GridRow = (props) => <Grid container direction ='row'{...props} />\r\n     const Item = (props) => <Grid item {...props} />\r\n\r\n\r\n\r\n\r\nconst useStyle = theme => ({\r\n  toolbarMargin: {\r\n    ...theme.mixins.toolbar,\r\n    marginBottom: \"1em\",\r\n    [theme.breakpoints.down(\"xs\")]:{\r\n      marginBottom: \"1.5em\",\r\n\r\n    },\r\n  },\r\n  logo: {\r\n    // height:\"100px\",\r\n    width: \"16em\",\r\n    [theme.breakpoints.down(\"md\")]:{\r\n      height: \"5em\",\r\n      width: \"17em\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]:{\r\n      height: \"5.5em\",\r\n      width: \"19em\",\r\n\r\n    },\r\n\r\n  },\r\n  paper:{\r\n     display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n       marginTop:theme.spacing(200),\r\n      margin: theme.spacing(30),\r\n      width: theme.spacing(300),\r\n      height: theme.spacing(16)\r\n    }\r\n  },\r\n   root: {\r\n      backgroundColor: '#FAFAFA',\r\n    minWidth: 200,\r\n     minHeight:300,\r\n  },\r\n  Win: {\r\n      backgroundColor: '#BCE6DA',\r\n    minWidth: 200,\r\n     minHeight:300,\r\n  },\r\n Loss: {\r\n  backgroundColor:'#F0A89C',\r\nminWidth: 200,\r\n minHeight:300,\r\n},\r\n    draw:{\r\n        backgroundColor: '#F0E79C',\r\n        minWidth: 200,\r\n        minHeight:300,\r\n\r\n    },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\n\r\nclass Statistics extends React.PureComponent {\r\nconstructor(props){\r\n    super(props)\r\n    this.state = {\r\n      selectOptionsNames : [],\r\n      height: [],\r\n      DOB:[],\r\n      SApM:[],\r\n      SLpM:[],\r\n      REACH:[],\r\n      STANCE:[],\r\n      WEIGHT:[],\r\n      strikeAccuracy:[],\r\n      strDef:[],\r\n      tdAcc:[],\r\n      subAvg:[],\r\n      tdDef:[],\r\n      tdAvg:[],\r\n      FighterA:[],\r\n      FighterB:[],\r\n      Response:false,\r\n      Response1:false,\r\n      Favourite: '',\r\n      UnderDog: '',\r\n      favWin:false,\r\n      undWin:false,\r\n      draw:false,\r\n      chart:[],\r\n      charttwo:[],\r\n      radarB:false,\r\n\r\n      // fixedOptions:[\"hello\"],\r\n      // value:[...this.fixedOptions, this.FighterA]\r\n    }\r\n    this.getFighterA = this.getFighterA.bind(this);\r\n\r\n  }\r\n\r\n\r\n  async getOptions(){\r\n    const res = await axios.get('/static/fighterDataset2.json')\r\n    const data = res.data\r\n    const nameData =[]\r\n    const heightData =[]\r\n    const StrikeAcc =[]\r\n    const DOB =[]\r\n    const SApM =[]\r\n    const SLpM =[]\r\n    const REACH =[]\r\n    const STANCE =[]\r\n    const WEIGHT =[]\r\n    const strDef =[]\r\n    const tdAcc =[]\r\n    const subAvg =[]\r\n    const tdDef =[]\r\n    const tdAvg =[]\r\n\r\n\r\n    for(let i =0; i< 6000 ;i++){\r\n      // console.log(FighterData.Name[i])\r\n      if (FighterData.Name[i] !== undefined){\r\n        nameData.push({ \"Name\" : FighterData.Name[i]})\r\n        heightData.push({\"Height\": FighterData.HEIGHT[i]})\r\n        StrikeAcc.push({\"StrAcc\": FighterData[\"Str. Acc..\"][i]})\r\n        DOB.push({\"DOB\":FighterData.DOB[i]})\r\n        SApM.push({\"SApM\":FighterData.SApM[i]})\r\n        SLpM.push({\"SLpM\":FighterData.SLpM[i]})\r\n        REACH.push({\"REACH\":FighterData.REACH[i]})\r\n        STANCE.push({\"STANCE\":FighterData.STANCE[i]})\r\n        WEIGHT.push({\"WEIGHT\":FighterData.WEIGHT[i]})\r\n        strDef.push({\"strDef\":FighterData[\"Str. Def\"][i]})\r\n        tdAcc.push({\"tdAcc\":FighterData[\"TD Acc\"][i]})\r\n        subAvg.push({\"subAvg\":FighterData[\"Sub. Avg\"][i]})\r\n        tdDef.push({\"tdDef\":FighterData[\"TD Def.\"][i]})\r\n        tdAvg.push({\"tdAvg\":FighterData[\"TD Avg\"][i]})\r\n\r\n\r\n      }\r\n    }\r\n\r\n    this.setState({selectOptionsNames: nameData})\r\n    this.setState({height: heightData})\r\n    this.setState({strikeAccuracy: StrikeAcc})\r\n    this.setState({DOB: DOB})\r\n    this.setState({SLpM: SLpM})\r\n    this.setState({REACH: REACH})\r\n    this.setState({STANCE: STANCE})\r\n    this.setState({WEIGHT: WEIGHT})\r\n    this.setState({strDef: strDef})\r\n    this.setState({tdAcc: tdAcc})\r\n    this.setState({subAvg: subAvg})\r\n    this.setState({tdDef: tdDef})\r\n    this.setState({tdAvg: tdAvg})\r\n    this.setState({SApM: SApM})\r\n\r\n  }\r\n    componentDidMount(){\r\n      this.getOptions()\r\n  }\r\n\r\n\r\n\r\n  getFighterA(param){\r\n    const indexA = this.state.selectOptionsNames.indexOf(param);\r\n    const FighterA=[]\r\n    let radar_one = []\r\n\r\n\r\n         const convertRange =( value, min , max) => {\r\n\r\n                for (let i = 0; i < value[0].length; i++)\r\n                {\r\n                    if(max - min === 0) return 1;\r\n                    value[0][i] = (value[0][i] - min) / (max - min);\r\n\r\n                }\r\n                return value[0];\r\n            };\r\n\r\n\r\n    if(indexA !== -1 ){\r\n      // this.setState({FighterA:[]}) // reset array before setting new data\r\n      FighterA.push(this.state.selectOptionsNames[indexA].Name)\r\n      FighterA.push(this.state.height[indexA].Height)\r\n      FighterA.push(this.state.WEIGHT[indexA].WEIGHT)\r\n      FighterA.push(this.state.REACH[indexA].REACH)\r\n      FighterA.push(this.state.STANCE[indexA].STANCE)\r\n      FighterA.push(this.state.DOB[indexA].DOB)\r\n      FighterA.push(this.state.SLpM[indexA].SLpM)\r\n      FighterA.push(this.state.strikeAccuracy[indexA].StrAcc)\r\n      FighterA.push(this.state.SApM[indexA].SApM)\r\n      FighterA.push(this.state.strDef[indexA].strDef)\r\n      FighterA.push(this.state.tdAvg[indexA].tdAvg)\r\n      FighterA.push(this.state.tdAcc[indexA].tdAcc)\r\n      FighterA.push(this.state.tdDef[indexA].tdDef)\r\n      FighterA.push(this.state.subAvg[indexA].subAvg)\r\n\r\n       radar_one.push(FighterA.slice(1,2).concat(FighterA.slice(3 ,4)).concat(FighterA.slice(6,13)));\r\n        console.log(\"radarone \" ,radar_one)\r\n        radar_one[0][0] = radar_one[0][0] * 30\r\n        radar_one[0][2] = radar_one[0][2] * 10\r\n        radar_one[0][4] = radar_one[0][4] * 10\r\n        radar_one[0][6] = radar_one[0][6] * 10\r\n\r\n            let chart = convertRange(radar_one ,2 ,10)\r\n            this.setState({chart:chart});\r\n\r\n\r\n    }else{\r\n            this.setState({chart:radar_one});\r\n            this.setState({FighterB:FighterA});\r\n    }\r\n\r\n    // console.log(\"Chart\",chart)\r\n    this.setState({FighterA:FighterA})\r\n    this.setState({Response:false});\r\n    this.setState({undWin:false});\r\n    this.setState({draw:false});\r\n  }\r\n\r\n    getFighterB(param){\r\n    const indexB = this.state.selectOptionsNames.indexOf(param);\r\n    const FighterB=[]\r\n    let radar_two = []\r\n\r\n     const convertRange =( value, min , max) => {\r\n\r\n            for (let i = 0; i < value[0].length; i++)\r\n            {\r\n                if(max - min === 0) return 1;\r\n                value[0][i] = (value[0][i] - min) / (max - min);\r\n\r\n            }\r\n            return value[0];\r\n        };\r\n\r\n    if(indexB!== -1 ){\r\n      // this.setState({FighterB:[]}) // reset array before setting new data\r\n      FighterB.push(this.state.selectOptionsNames[indexB].Name)\r\n      FighterB.push(this.state.height[indexB].Height)\r\n      FighterB.push(this.state.WEIGHT[indexB].WEIGHT)\r\n      FighterB.push(this.state.REACH[indexB].REACH)\r\n      FighterB.push(this.state.STANCE[indexB].STANCE)\r\n      FighterB.push(this.state.DOB[indexB].DOB)\r\n      FighterB.push(this.state.SLpM[indexB].SLpM)\r\n      FighterB.push(this.state.strikeAccuracy[indexB].StrAcc)\r\n      FighterB.push(this.state.SApM[indexB].SApM)\r\n      FighterB.push(this.state.strDef[indexB].strDef)\r\n      FighterB.push(this.state.tdAvg[indexB].tdAvg)\r\n      FighterB.push(this.state.tdAcc[indexB].tdAcc)\r\n      FighterB.push(this.state.tdDef[indexB].tdDef)\r\n      FighterB.push(this.state.subAvg[indexB].subAvg)\r\n\r\n\r\n        radar_two.push(FighterB.slice(1,2).concat(FighterB.slice(3 ,4)).concat(FighterB.slice(6,13)));\r\n        console.log(\"Radar Two \" ,radar_two)\r\n        radar_two[0][0] = radar_two[0][0] * 30\r\n        radar_two[0][2] = radar_two[0][2] * 10\r\n        radar_two[0][4] = radar_two[0][4] * 10\r\n        radar_two[0][6] = radar_two[0][6] * 10\r\n\r\n            let chart = convertRange(radar_two ,2 ,10)\r\n            this.setState({charttwo:chart});\r\n\r\n    }\r\n    else{\r\n            this.setState({charttwo:radar_two});\r\n            this.setState({FighterB:FighterB});\r\n    }\r\n\r\n        this.setState({FighterB:FighterB});\r\n\r\n\r\n  }\r\n\r\n\r\n     // const Grids = (props) => <Grid container {...props} />\r\n     // const GridCol = (props) => <Grid container direction ='column'{...props} />\r\n     // const GridRow = (props) => <Grid container direction ='row'{...props} />\r\n     // const Item = (props) => <Grid item {...props} />\r\n\r\n\r\n  render(){\r\n    const { classes } = this.props;\r\n    const bull = <span className={classes.bullet}>•</span>;\r\n    const data = [\r\n  {\r\n    subject: 'HEIGHT',\r\n    A: this.state.chart[0],\r\n    B: this.state.charttwo[0],\r\n    fullMark: 20,\r\n  },\r\n\r\n  {\r\n    subject: 'REACH',\r\n    A: this.state.chart[1],\r\n    B: this.state.charttwo[1],\r\n    fullMark: 10,\r\n  },\r\n  {\r\n    subject: 'Strike Landed Per Min',\r\n    A: this.state.chart[2],\r\n    B: this.state.charttwo[2],\r\n    fullMark: 10,\r\n  },\r\n  {\r\n    subject: 'Strike Acc',\r\n    A: this.state.chart[3],\r\n    B: this.state.charttwo[3],\r\n    fullMark: 10,\r\n  },\r\n  {\r\n    subject: 'Strike Absorbed Per Min',\r\n    A: this.state.chart[4],\r\n    B: this.state.charttwo[4],\r\n    fullMark: 10,\r\n  },\r\n {\r\n    subject: 'Strike Def',\r\n    A: this.state.chart[5],\r\n    B: this.state.charttwo[5],\r\n    fullMark: 10,\r\n  },\r\n {\r\n    subject: 'Takedown Avg',\r\n    A: this.state.chart[6],\r\n    B: this.state.charttwo[6],\r\n    fullMark: 10,\r\n  }, {\r\n    subject: 'Takedown Acc',\r\n    A: this.state.chart[7],\r\n    B: this.state.charttwo[7],\r\n    fullMark: 10,\r\n  }, {\r\n    subject: 'Takedown Def',\r\n    A: this.state.chart[8],\r\n    B: this.state.charttwo[8],\r\n    fullMark: 10,\r\n  },\r\n  //       {\r\n  //   subject: 'Submission Avg',\r\n  //   A: this.state.chart[8],\r\n  //   B: 0,\r\n  //   fullMark: 10,\r\n  // },\r\n\r\n];\r\n\r\n    return (\r\n\r\n    <React.Fragment>\r\n       <Box p={5}>\r\n           <GridRow>\r\n               <GridRow  >\r\n\r\n                      <GridRow spacing={10}>\r\n\r\n                                <GridRow xs={6} justify=\"flex-end\" alignItems=\"center\">\r\n                                    <Item styles={{marginLeft:2000}}>\r\n\r\n\r\n                                      <Box p={1.5}>\r\n                                          <Paper  styles={classes.paper}>\r\n\r\n                                             <Autocomplete\r\n                                              id=\"FighterA\"\r\n                                              options={this.state.selectOptionsNames}\r\n                                              getOptionLabel={(option) => option.Name}\r\n                                              style={{ width: 500 }}\r\n                                              onChange={(event, value) => this.getFighterA(value)} // sends Index of selected Item Fighter A\r\n                                              renderInput={(params ) => <TextField {...params}  label=\"Fighters\" variant=\"outlined\" />}\r\n                                            />\r\n\r\n                                        </Paper>\r\n                                      </Box>\r\n                                    </Item>\r\n                                </GridRow>\r\n\r\n\r\n                                <GridRow xs={6}  justify=\"flex-start\" alignItems=\"center\" >\r\n                                    <Item >\r\n\r\n\r\n                                          <Box p={1.5}>\r\n                                              <Paper  styles={classes.paper}>\r\n\r\n                                                 <Autocomplete\r\n                                                  id=\"FighterB\"\r\n                                                  options={this.state.selectOptionsNames}\r\n                                                  getOptionLabel={(option) => option.Name}\r\n                                                  style={{ width: 500 }}\r\n                                                  onChange={(event, value) => this.getFighterB(value)} // sends Index of selected Item Fighter A\r\n                                                  renderInput={(params ) => <TextField {...params}  label=\"Fighters\" variant=\"outlined\" />}\r\n                                                />\r\n\r\n                                            </Paper>\r\n                                          </Box>\r\n                                    </Item>\r\n                                </GridRow>\r\n                      </GridRow>\r\n                </GridRow>\r\n           </GridRow>\r\n\r\n           <GridCol>\r\n\r\n                  <Box p={15}>\r\n                      <Item xs={12} lg={12}>\r\n                               <GridCol  justify=\"center\" alignItems=\"center\">\r\n                                   <Item>\r\n                                        <Card elevation={3} className={this.state.Response1?  this.state.draw ?  classes.draw : this.state.undWin ? classes.Win: classes.Loss : classes.root}>\r\n                                    <CardActionArea>\r\n                                        <CardActions>\r\n                                            <CardContent>\r\n                                                <Typography variant=\"h7\" component=\"h1\">\r\n                                                   Radar Chart\r\n                                                 </Typography>\r\n\r\n                                            </CardContent>\r\n                                        </CardActions>\r\n                                         <GridRow justify=\"center\" alignItems=\"center\">\r\n                                        <Item xs={12}>\r\n                                             <ResponsiveContainer width={1200} height={500}>\r\n                                                <RadarChart cx=\"50%\" cy=\"45%\" outerRadius=\"85%\" data={data}>\r\n                                                  <PolarGrid />\r\n                                                  <PolarAngleAxis dataKey=\"subject\" />\r\n                                                  <PolarRadiusAxis angle={40} domain={[0, 10]} />\r\n                                                  <Radar name={this.state.FighterA[0]} dataKey=\"A\" stroke=\"#fc9992\" fill=\"#fc9992\" fillOpacity={0.6} />\r\n                                                  <Radar  name={this.state.FighterB[0]} dataKey=\"B\" stroke=\"#a3eef0\" fill=\"#a3eef0\" fillOpacity={0.6} />\r\n                                                  <Legend />\r\n                                                </RadarChart>\r\n                                            </ResponsiveContainer>\r\n                                        </Item>\r\n                                     </GridRow>\r\n                                    </CardActionArea>\r\n                                </Card>\r\n                                   </Item>\r\n\r\n                               </GridCol>\r\n                      </Item>\r\n                  </Box>\r\n\r\n                  <Box p={10}>\r\n                      <Item xs={12} lg={12}>\r\n                               <GridCol  justify=\"center\" alignItems=\"center\">\r\n                                   <Item>\r\n                                        <Card  elevation={3} className={this.state.Response1?  this.state.draw ?  classes.draw : this.state.undWin ? classes.Win: classes.Loss : classes.root}>\r\n                                    <CardActionArea>\r\n                                        <CardActions>\r\n                                            <CardContent>\r\n                                                <Typography variant=\"h7\" component=\"h1\">\r\n                                                   Bar Chart\r\n                                                 </Typography>\r\n\r\n                                            </CardContent>\r\n                                        </CardActions>\r\n                                         <GridRow justify=\"center\" alignItems=\"center\">\r\n                                        <Item xs={12}>\r\n                                            <ResponsiveContainer width={1200} height={500}>\r\n                                                <BarChart\r\n                                                  width={500}\r\n                                                  height={300}\r\n                                                  data={data}\r\n                                                  stackOffset=\"sign\"\r\n                                                  margin={{\r\n                                                    top: 5,\r\n                                                    right: 30,\r\n                                                    left: 20,\r\n                                                    bottom: 5,\r\n                                                  }}\r\n                                                >\r\n                                                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                                  <XAxis dataKey=\"subject\" />\r\n                                                  <YAxis />\r\n                                                  <Tooltip />\r\n                                                  <Legend />\r\n                                                  <ReferenceLine y={0} stroke=\"#000\" />\r\n                                                   <Bar dataKey=\"A\" stackId=\"a\" fill=\"#8884d8\" />\r\n                                                   <Bar dataKey=\"B\" stackId=\"a\" fill=\"#82ca9d\" />\r\n                                                </BarChart>\r\n                                            </ResponsiveContainer>\r\n                                        </Item>\r\n                                     </GridRow>\r\n                                    </CardActionArea>\r\n                                </Card>\r\n                                   </Item>\r\n\r\n                               </GridCol>\r\n                      </Item>\r\n                  </Box>\r\n\r\n\r\n\r\n            </GridCol>\r\n\r\n       </Box>\r\n\r\n    </React.Fragment>\r\n\r\n  );\r\n  }\r\n}\r\n\r\n\r\n\r\n// export default class ComboBox\r\nexport default withStyles(useStyle)(Statistics)\r\n\r\n","import React,{useState} from 'react'\nimport Header from \"./UI/Header\"\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport {BrowserRouter,Route,Switch}  from 'react-router-dom'\nimport  theme from \"./UI/Theme\"\nimport ProfessorMMA from \"./UI/fighterPage\";\nimport Statistics from \"./UI/statistics\";\n\n\nfunction App() {\n  const [value, setValue] = useState(0);\n\n  return (\n   <ThemeProvider theme ={theme}>\n     <BrowserRouter>\n     <Header value={value} setValue={setValue}  />\n      <Switch>\n      {/* <LandingPage /> */}\n        <Route exact path=\"/\" component={()=> <div style={{height: \"2000px\"}} >Landing page</div>}/>\n        <Route exact path=\"/Project\" component={ProfessorMMA }/>\n        <Route exact path=\"/chart\" component={Statistics}/>\n        <Route exact path=\"/contact\" component={()=> <div style={{height: \"2000px\"}} >contact</div> }/>\n      </Switch>\n     </BrowserRouter>\n   </ThemeProvider>\n      \n    \n  \n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}