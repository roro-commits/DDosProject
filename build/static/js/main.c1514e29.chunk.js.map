{"version":3,"sources":["UI/Header.js","img/logo.svg","UI/Theme.js","UI/fighterPage.js","UI/statistics.js","App.js","index.js"],"names":["HideOnScroll","props","children","trigger","useScrollTrigger","appear","direction","in","useStyle","makeStyles","theme","toolbarMargin","mixins","toolbar","marginBottom","breakpoints","down","logo","width","height","tabContainer","marginRight","tab","typography","minWidth","marginLeft","futureLogo","estimate","borderRadius","color","logoContainer","padding","backgroundColor","menu","palette","common","arcBlue","MenuItem","opacity","drawerIcon","drawerIconContainer","drawer","black","drawerItem","drawerItemSelected","drawerItemEstimate","arcOrange","Header","classes","useTheme","matches","useMediaQuery","iOS","process","browser","test","navigator","userAgent","useState","openDrawer","setOpenDrawer","window","location","pathname","value","setValue","tabs","Fragment","onChange","e","className","indicatorColor","component","Link","to","label","paper","disableBackdropTransition","disableDiscovery","open","onClose","onOpen","disablePadding","onClick","divider","button","selected","disableTypography","disableRipple","position","disableGutters","src","alt","silkwhite","createMuiTheme","orange","primary","main","secondary","fontFamily","textTransform","fontWeight","fontSize","h2","lineHeight","h3","h4","subtitle1","GridRow","Grid","container","Item","item","ProfessorMMA","state","data_test","data_test2","IPV4_SRC_ADDR","L4_SRC_PORT","IPV4_DST_ADDR","L4_DST_PORT","PROTOCOL","L7_PROTO","IN_BYTES","OUT_BYTES","IN_PKTS","OUT_PKTS","TCP_FLAGS","FLOW_DURATION_MILLISECONDS","Label","Attack","Binary_result","Binary_prediction","Binary_total_correct","Binary_total_wrong","injection_correct","injection_incorrect","dos_correct","dos_Incorrect","Benign_correct","Benign_incorrect","password_correct","password_incorrect","xss_correct","xss_incorrect","scanning_correct","scanning_incorrect","ddos_correct","ddos_incorrect","backdoor_correct","backdoor_incorrect","mitm_correct","mitm_incorrect","ransomware_correct","ransomware_incorrect","type_result","skorch_result","skorch_prediction","skorch_total_correct","skorch_total_wrong","Random_result","Random_prediction","Random_total_correct","Random_total_wrong","index","simulationData","graph","simulation_sample","selected_quanltity","FighterA","FighterB","Response","Response1","Favourite","UnderDog","favWin","undWin","draw","getQuantity","bind","getFighterB","postData","setGraph","multi_simulation","saveData","a","axios","get","res","data","console","log","i","length","undefined","push","this","setState","getOptions","name","param","qauntity","Number","binary_result","rand","Math","random","toFixed","prevState","setTimeout","indexB","selectOptionsNames","indexOf","Name","Height","WEIGHT","REACH","STANCE","DOB","SLpM","strikeAccuracy","StrAcc","SApM","strDef","tdAvg","tdAcc","tdDef","subAvg","require","url","method","headers","form","then","response","binary_total_correct","binary_total_wrong","injection_incorrectcorrect","catch","binary_prediction","rand_prediction","skorch_nn_prediction","main_prediction","MAIN_BINARY","random_forest_prediction","RAND_PREDICTIOB","SKORCH_PREDICTION","uv","pv","amt","bullet","Box","p","xs","spacing","lg","Card","elevation","Win","Loss","root","CardActionArea","CardActions","justify","alignItems","Typography","variant","ResponsiveContainer","ComposedChart","layout","margin","top","right","bottom","left","CartesianGrid","stroke","XAxis","type","YAxis","dataKey","scale","Tooltip","Legend","Area","fill","Bar","barSize","Line","Paper","styles","Autocomplete","id","options","style","event","renderInput","params","TextField","htmlFor","Button","size","ref","myButton","React","Component","withStyles","display","flexWrap","marginTop","minHeight","transform","title","pos","GridCol","Statistics","stats","subject","Correct","Incorrect","fullMark","chart","charttwo","radarB","getFighterA","indexA","radar_one","slice","concat","min","max","convertRange","radar_two","CardContent","RadarChart","cx","cy","outerRadius","PolarGrid","PolarAngleAxis","PolarRadiusAxis","angle","domain","Radar","fillOpacity","BarChart","stackOffset","strokeDasharray","ReferenceLine","y","stackId","PureComponent","App","setStats","ThemeProvider","exact","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1514e29.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { AppBar } from '@material-ui/core'\r\nimport { Toolbar } from '@material-ui/core'\r\n// import { Typography } from '@material-ui/core'\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport logo from '../img/logo.svg'\r\nimport { Tabs, Tab } from '@material-ui/core'\r\nimport { Button } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\nimport { Menu, MenuItem } from '@material-ui/core'\r\nimport {useMediaQuery}  from '@material-ui/core'\r\nimport {useTheme}  from '@material-ui/core'\r\nimport  {SwipeableDrawer} from  '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport {IconButton} from '@material-ui/core'\r\nimport {List,ListItem,ListItemText} from '@material-ui/core'\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\n\r\n\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children} = props;\r\n\r\n  const trigger = useScrollTrigger();\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n  toolbarMargin: {\r\n    ...theme.mixins.toolbar,\r\n    marginBottom: \"2em\",\r\n    [theme.breakpoints.down(\"xs\")]:{\r\n      marginBottom: \"1.5em\",\r\n\r\n    },\r\n  },\r\n  logo: {\r\n    // height:\"100px\",\r\n    width: \"3em\",\r\n    [theme.breakpoints.down(\"md\")]:{\r\n      height: \"3em\",\r\n      width: \"7em\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]:{\r\n      height: \"5.5em\",\r\n      width: \"19em\",\r\n\r\n    },\r\n\r\n  },\r\n  tabContainer: {\r\n    marginRight: \"auto\"\r\n  },\r\n  tab: {\r\n    ...theme.typography.tab,\r\n    minWidth: 10,\r\n    marginLeft: \"25px\",\r\n  },\r\n  futureLogo: {\r\n    ...theme.typography.estimate,\r\n    borderRadius: \"50px\",\r\n    marginLeft: \"50px\",\r\n    marginRight: \"25px\",\r\n    height: \"45px\",\r\n    color: \"white\"\r\n  },\r\n  logoContainer: {\r\n    padding: 0,\r\n    \"&:hoover\": {\r\n      backgroundColor: \"transparent\"\r\n    }\r\n  },\r\n  menu:{\r\n    backgroundColor: theme.palette.common.arcBlue,\r\n    color:\"white\",\r\n  },\r\n  MenuItem :{\r\n    ...theme.typography.tab,\r\n    color:'green',\r\n    opacity:1,\r\n    \"&:hover\":{\r\n      opacity:1,\r\n    }\r\n  },\r\n  drawerIcon:{\r\n    height:\"45px\",\r\n    width:\"45px\",\r\n  },\r\n\r\n  drawerIconContainer:{\r\n    \"&:hover\":{\r\n      backgroundColor:\"transparent\"\r\n    },\r\n    marginRight: \"auto\",\r\n  },\r\n  drawer: {\r\n    backgroundColor: theme.palette.common.black,\r\n\r\n  },\r\n  drawerItem:{\r\n    ...theme.typography.tab,\r\n    color:\"white\",\r\n    opacity: 0.7,\r\n  },\r\n  drawerItemSelected:{\r\n    \"& .MuiListItemText-root\":{\r\n          color:\"green\",\r\n      opacity: 1}\r\n  },\r\n  drawerItemEstimate:{\r\n    backgroundColor: theme.palette.common.arcOrange,\r\n\r\n  },\r\n\r\n}));\r\n\r\n\r\nfunction Header(props) {\r\n  const classes = useStyle();\r\n  const theme  = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n\r\n  // use state explain\r\n  const [openDrawer, setOpenDrawer] = useState(false)\r\n\r\n\r\n\r\n  // Reload function & tracking\r\n\r\n    const handleChange = (e ,value) => {\r\n    props.setValue(value)\r\n  }\r\n  //gets the url and see if it matches\r\n  switch(window.location.pathname){\r\n    case \"/\":\r\n      if (props.value !==0){\r\n       props.setValue(0)\r\n      }\r\n      break;\r\n    case \"/Project\":\r\n      if (props.value !==1){\r\n       props.setValue(1)\r\n\r\n      }\r\n    break;\r\n\r\n    case \"/chart\":\r\n      if (props.value !==2){\r\n        props.setValue(2)\r\n\r\n      }\r\n\r\n    break;\r\n    case \"/contact\":\r\n        if (props.value !==3){\r\n       props.setValue(3)\r\n      }\r\n    break;\r\n\r\n    default:\r\n      break;\r\n\r\n  }\r\n\r\n\r\n\r\n  const tabs = (\r\n    <React.Fragment>\r\n      <Tabs value={ props.value} onChange={handleChange} className={classes.tabContainer} indicatorColor=\"secondary\">\r\n           <Tab  className={classes.tab} component={Link}   to=\"/\" label=\"Home\" />\r\n           <Tab className={classes.tab} component={Link}  to=\"/Project\" label=\"ProfessorM.M.A\" />\r\n           <Tab className={classes.tab} component={Link} to=\"/chart\" label=\"Player Statistics\" />\r\n           <Tab className={classes.tab} component={Link} to=\"/contact\" label=\"Contact\" />\r\n      </Tabs>\r\n    </React.Fragment>\r\n\r\n  )\r\n\r\n  const drawer = (\r\n    <React.Fragment>\r\n        <SwipeableDrawer classes ={{paper: classes.drawer}} disableBackdropTransition={!iOS} disableDiscovery={iOS} open ={openDrawer} onClose={() => {setOpenDrawer(false);  props.setValue(0)}} onOpen ={() => setOpenDrawer(true)} >\r\n          <div className={classes.toolbarMargin}/>\r\n          <List disablePadding>\r\n            <ListItem  key = { props.value} onClick={() =>{ setOpenDrawer(false);  props.setValue(0) }} divider button component= {Link} to =\"/\" selected = { props.value === 0} classes ={{selected: classes.drawerItemSelected}}>\r\n              <ListItemText className = {classes.drawerItem} disableTypography>\r\n                  Home\r\n              </ListItemText>\r\n            </ListItem>\r\n\r\n            <ListItem  key = { props.value}  onClick={() => {setOpenDrawer(false);  props.setValue(1)}} divider button component= {Link} to =\"/Project\" selected = { props.value === 1} classes ={{selected: classes.drawerItemSelected}}>\r\n              <ListItemText className = {classes.drawerItem} disableTypography>\r\n                Professor M.M.A\r\n              </ListItemText>\r\n            </ListItem>\r\n\r\n            <ListItem key = { props.value}  onClick={() => {setOpenDrawer(false);  props.setValue(2)}}  divider button component= {Link} to =\"/chart\" selected = { props.value === 2} classes ={{selected: classes.drawerItemSelected}}>\r\n              <ListItemText className = {classes.drawerItem} disableTypography>\r\n                Player Statistics\r\n              </ListItemText>\r\n            </ListItem>\r\n\r\n\r\n            <ListItem key = { props.value}  onClick={() => {setOpenDrawer(false);  props.setValue(4)}}  divider button  component= {Link} to =\"/contact\" selected = { props.value === 3} classes ={{selected: classes.drawerItemSelected}}>\r\n              <ListItemText className = {classes.drawerItem} disableTypography>\r\n                  Contact\r\n              </ListItemText>\r\n            </ListItem>\r\n\r\n\r\n          </List>\r\n\r\n        </SwipeableDrawer>\r\n        <IconButton className={classes.drawerIconContainer} onClick={() => setOpenDrawer (!openDrawer)} disableRipple>\r\n            <MenuIcon className ={classes.drawerIcon}/>\r\n        </IconButton>\r\n    </React.Fragment>\r\n\r\n  )\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <HideOnScroll {...props}>\r\n        <AppBar position=\"fixed\" >\r\n          <Toolbar disableGutters>\r\n\r\n            {matches ? drawer : tabs}\r\n            <Button component={Link} to=\"/\" className={classes.logoContainer} onClick={() =>  props.setValue(0)} disableRipple>\r\n              <img src={logo} alt=\"Logo\" className={classes.logo} />\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n       <Toolbar />\r\n      <div className={classes.toolbarMargin}></div>\r\n    </React.Fragment>\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/logo.f626c697.svg\";","import { orange } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst silkwhite =\"#FFFFFF\";\r\nconst arcOrange = \"#FFBA60\";\r\nconst arcGrey = \"#868686\"\r\n\r\nexport default createMuiTheme({\r\n    palette:{\r\n        common:{\r\n            arcBlue: `${silkwhite}`,\r\n            arcOrange: `${arcOrange}`,\r\n            black: \"black\",\r\n            orange:\"orange\"\r\n        },\r\n        primary:{\r\n            main: `${silkwhite}`\r\n        },\r\n        secondary:{\r\n            main: `${arcOrange}`\r\n\r\n        }\r\n    },\r\n    typography:{\r\n        tab:{\r\n            fontFamily: \"Raleway\",\r\n            textTransform: \"none\",\r\n            fontWeight:700,\r\n            fontSize: \"1rem\",\r\n         \r\n        },\r\n        estimate: {\r\n            fontFamily:\"Pacifico\",\r\n            fontSize:\"1rem\",\r\n            textTransform:\"none\",\r\n        },\r\n        h2:{\r\n            fontFamily:\"Raleway\",\r\n            fontWeight: 700,\r\n            fontSize: \"2.5rem\",\r\n            color:`${silkwhite}`,\r\n            lineHeight: 1.5\r\n\r\n        },\r\n        h3:{\r\n            fontFamily:\"Pacifico\",\r\n            fontSize: \"2.5rem\",\r\n            color:`${silkwhite}`,\r\n        },\r\n        h4:{\r\n            fontFamily:\"Raleway\",\r\n            fontWeight: 700,\r\n            fontSize: \"1.75rem\",\r\n            color:`${silkwhite}`,\r\n        },\r\n        subtitle1:{\r\n            fontFamily:\"Raleway\",\r\n            fontWeight: 400,\r\n            fontSize: \"1.25rem\",\r\n            color:`${arcGrey}`,\r\n        },\r\n    }\r\n    \r\n})\r\n","/* eslint-disable no-use-before-define */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport axios from \"axios\";\r\nimport FighterData from \"../DATA/fighterDataset.json\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {\r\n  ComposedChart,\r\n  Line,\r\n  Area,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\n// abstract Grid\r\n\r\nconst Grids = (props) => <Grid container {...props} />;\r\nconst GridCol = (props) => <Grid container direction=\"column\" {...props} />;\r\nconst GridRow = (props) => <Grid container direction=\"row\" {...props} />;\r\nconst Item = (props) => <Grid item {...props} />;\r\n\r\nconst useStyle = (theme) => ({\r\n  toolbarMargin: {\r\n    ...theme.mixins.toolbar,\r\n    marginBottom: \"1em\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginBottom: \"1.5em\",\r\n    },\r\n  },\r\n  logo: {\r\n    // height:\"100px\",\r\n    width: \"16em\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      height: \"5em\",\r\n      width: \"17em\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      height: \"5.5em\",\r\n      width: \"19em\",\r\n    },\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      marginTop: theme.spacing(200),\r\n      margin: theme.spacing(30),\r\n      width: theme.spacing(300),\r\n      height: theme.spacing(16),\r\n    },\r\n  },\r\n  root: {\r\n    backgroundColor: \"#FAFAFA\",\r\n    minWidth: 1750,\r\n    minHeight: 500,\r\n  },\r\n  Win: {\r\n    backgroundColor: \"#47ff63\",\r\n    minWidth: 1750,\r\n    minHeight: 500,\r\n  },\r\n  Loss: {\r\n    backgroundColor: \"#F0A89C\",\r\n    minWidth: 1750,\r\n    minHeight: 500,\r\n  },\r\n  draw: {\r\n    backgroundColor: \"#F0E79C\",\r\n    minWidth: 1750,\r\n    minHeight: 500,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nclass ProfessorMMA extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      //Data from Backend\r\n      data_test:1000,\r\n      data_test2:[100],\r\n      IPV4_SRC_ADDR : [],\r\n      L4_SRC_PORT : [],\r\n      IPV4_DST_ADDR : [],\r\n      L4_DST_PORT : [],\r\n      PROTOCOL : [],\r\n      L7_PROTO : [],\r\n      IN_BYTES : [],\r\n      OUT_BYTES : [],\r\n      IN_PKTS : [],\r\n      OUT_PKTS : [],\r\n      TCP_FLAGS : [],\r\n      FLOW_DURATION_MILLISECONDS : [200],\r\n      Label : [],\r\n      Attack : [],\r\n      //Result binary  Check \r\n      Binary_result:[],\r\n      Binary_prediction:[],\r\n      Binary_total_correct: 0,\r\n      Binary_total_wrong: 0,\r\n\r\n      //Graph staticis page \r\n      // #[5 rows x 13 columns]\r\n      // #0 injection     468539\r\n      // #1 ddos          326345\r\n      // #2 Benign        270279 free from virus\r\n      // #3 password      156299\r\n      // #4 xss            99944\r\n      // #5 scanning       21467\r\n      // #6 Dos            17717\r\n      // #7 backdoor       17247\r\n      // #8 mitm            1295\r\n      // #9 ransomware       142\r\n\r\n      injection_correct:0,\r\n      injection_incorrect:0,\r\n      dos_correct:0,\r\n      dos_Incorrect:0,\r\n      Benign_correct:0,\r\n      Benign_incorrect:0,\r\n      password_correct:0,\r\n      password_incorrect:0,\r\n      xss_correct:0,\r\n      xss_incorrect:0,\r\n      scanning_correct:0,\r\n      scanning_incorrect:0,\r\n      ddos_correct:0,\r\n      ddos_incorrect:0,\r\n      backdoor_correct:0,\r\n      backdoor_incorrect:0,\r\n      mitm_correct:0,\r\n      mitm_incorrect:0,\r\n      ransomware_correct:0,\r\n      ransomware_incorrect:0,\r\n      //type result \r\n      type_result:[],\r\n      // skorch\r\n      skorch_result:[],\r\n      skorch_prediction:[],\r\n      skorch_total_correct: 0,\r\n      skorch_total_wrong: 0,\r\n      // Random Forest\r\n      Random_result:[],\r\n      Random_prediction:[],\r\n      Random_total_correct: 0,\r\n      Random_total_wrong: 0,\r\n      //\r\n      index:0,\r\n      //data for graph and backend\r\n      simulationData:[],\r\n      graph:[],\r\n      simulation_sample:['2','4','10','20','40','50','60','80','90','100','200','500','1000'],\r\n      selected_quanltity:1,\r\n      //old\r\n      FighterA: [],\r\n      FighterB: [],\r\n      Response: false,\r\n      Response1: false,\r\n      Favourite: \"\",\r\n      UnderDog: \"\",\r\n      favWin: false,\r\n      undWin: false,\r\n      draw: false,\r\n    };\r\n    this.getQuantity = this.getQuantity.bind(this);\r\n    this.getFighterB = this.getFighterB.bind(this);\r\n    this.postData = this.postData.bind(this);\r\n    this.setGraph = this.setGraph.bind(this);\r\n    this.multi_simulation = this.multi_simulation.bind(this);\r\n    this.saveData = this.saveData.bind(this);\r\n    // this.inputElement = this.inputElement.bind(this);\r\n\r\n    \r\n    \r\n  }\r\n\r\n  // Pulls data from the back end and store in React Compnent prod env\r\n  async getOptions() {\r\n    const res = await axios.get(\r\n      \"/static/csvjson.json\"\r\n    );\r\n\r\n  // Dev Env\r\n    // const res = await axios.get('http://127.0.0.1:5000//static/csvjson.json')\r\n\r\n    const data = res.data;\r\n\r\n    console.log(data.FLOW_DURATION_MILLISECONDS);\r\n\r\n    const IPV4_SRC_ADDR = [];\r\n    const L4_SRC_PORT = [];\r\n    const IPV4_DST_ADDR = [];\r\n    const L4_DST_PORT = [];\r\n    const PROTOCOL = [];\r\n    const L7_PROTO = [];\r\n    const IN_BYTES = [];\r\n    const OUT_BYTES = [];\r\n    const IN_PKTS = [];\r\n    const OUT_PKTS = [];\r\n    const TCP_FLAGS = [];\r\n    const FLOW_DURATION_MILLISECONDS = [];\r\n    const Label = [];\r\n    const Attack = [];\r\n\r\n    // for (let i = 0; i < 6000; i++) {\r\n    //   // console.log(FighterData.Name[i])\r\n    //   if (FighterData.Name[i] !== undefined) {\r\n    //     nameData.push({ Name: FighterData.Name[i] });\r\n    //     heightData.push({ Height: FighterData.HEIGHT[i] });\r\n    //     StrikeAcc.push({ StrAcc: FighterData[\"Str. Acc..\"][i] });\r\n    //     DOB.push({ DOB: FighterData.DOB[i] });\r\n    //     SApM.push({ SApM: FighterData.SApM[i] });\r\n    //     SLpM.push({ SLpM: FighterData.SLpM[i] });\r\n    //     REACH.push({ REACH: FighterData.REACH[i] });\r\n    //     STANCE.push({ STANCE: FighterData.STANCE[i] });\r\n    //     WEIGHT.push({ WEIGHT: FighterData.WEIGHT[i] });\r\n    //     strDef.push({ strDef: FighterData[\"Str. Def\"][i] });\r\n    //     tdAcc.push({ tdAcc: FighterData[\"TD Acc\"][i] });\r\n    //     subAvg.push({ subAvg: FighterData[\"Sub. Avg\"][i] });\r\n    //     tdDef.push({ tdDef: FighterData[\"TD Def.\"][i] });\r\n    //     tdAvg.push({ tdAvg: FighterData[\"TD Avg\"][i] });\r\n    //   }\r\n    // }\r\n\r\n    for (let i = 0; i < res.data.length; i++) {\r\n      // console.log(data[i][\"IPV4_SRC_ADDR\"])\r\n      if (data[i][\"IPV4_SRC_ADDR\"] !== undefined) {\r\n        // IPV4_SRC_ADDR.push(data[\"IPV4_SRC_ADDR\"][i]);\r\n        IPV4_SRC_ADDR.push({ IPV4_SRC_ADDR:data[i][\"IPV4_SRC_ADDR\"] });\r\n        L4_SRC_PORT.push({ L4_SRC_PORT:data[i][\"L4_SRC_PORT\"] });\r\n        IPV4_DST_ADDR.push({ IPV4_DST_ADDR:data[i][\"IPV4_DST_ADDR\"] });\r\n        L4_DST_PORT.push({ L4_DST_PORT:data[i][\"L4_DST_PORT\"] });\r\n        PROTOCOL.push({ PROTOCOL:data[i][\"PROTOCOL\"] });\r\n        L7_PROTO.push({ L7_PROTO:data[i][\"L7_PROTO\"] });\r\n        IN_BYTES.push({ IN_BYTES:data[i][\"IN_BYTES\"] });\r\n        OUT_BYTES.push({ OUT_BYTES:data[i][\"OUT_BYTES\"] });\r\n        IN_PKTS.push({ IN_PKTS:data[i][\"IN_PKTS\"] });\r\n        OUT_PKTS.push({ OUT_PKTS:data[i][\"OUT_PKTS\"] });\r\n        TCP_FLAGS.push({ TCP_FLAGS:data[i][\"TCP_FLAGS\"] });\r\n        FLOW_DURATION_MILLISECONDS.push({ FLOW_DURATION_MILLISECONDS:data[i][\"FLOW_DURATION_MILLISECONDS\"] });\r\n        Label.push({ Label:data[i][\"Label\"] });\r\n        Attack.push({ Attack:data[i][\"Attack\"] });\r\n\r\n        // console.log({ L4_SRC_PORT })\r\n        // console.log({ IPV4_SRC_ADDR })\r\n        // console.log({FLOW_DURATION_MILLISECONDS})\r\n\r\n\r\n\r\n      }\r\n      \r\n\r\n      \r\n    }\r\n\r\n    this.setState({ IPV4_SRC_ADDR: IPV4_SRC_ADDR });\r\n    this.setState({ L4_SRC_PORT: L4_SRC_PORT });\r\n    this.setState({ IPV4_DST_ADDR: IPV4_DST_ADDR });\r\n    this.setState({ L4_DST_PORT: L4_DST_PORT });\r\n    this.setState({ PROTOCOL: PROTOCOL });\r\n    this.setState({ L7_PROTO: L7_PROTO });\r\n    this.setState({ IN_BYTES: IN_BYTES });\r\n    this.setState({ OUT_BYTES: OUT_BYTES });\r\n    this.setState({ IN_PKTS: IN_PKTS });\r\n    this.setState({ OUT_PKTS: OUT_PKTS });\r\n    this.setState({ TCP_FLAGS: TCP_FLAGS });\r\n    this.setState({ FLOW_DURATION_MILLISECONDS: FLOW_DURATION_MILLISECONDS });\r\n    this.setState({ Label: Label });\r\n    this.setState({ Attack: Attack });\r\n  \r\n  }\r\n\r\n  // pull the data when the compenent loads\r\n  componentDidMount() {\r\n    this.getOptions();\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ name: e.label });\r\n  }\r\n\r\n  getQuantity(param) {\r\n    const qauntity = Number(param)\r\n    console.log(\"quantity selected\", qauntity)\r\n    this.setState({ selected_quanltity: qauntity });\r\n  }\r\n\r\n  setGraph(i) \r\n  {\r\n    const graph = [];\r\n    const simulationData=[];\r\n    const binary_result =[];\r\n    const type_result = []; \r\n    const min = 0;\r\n    const max = 15000;\r\n    let rand = min + Math.random() * (max - min)\r\n     rand = rand.toFixed();\r\n\r\n     this.setState({Response:false});\r\n\r\n    \r\n\r\n  \r\n\r\n    \r\n    \r\n    graph.push(this.state.FLOW_DURATION_MILLISECONDS[rand].FLOW_DURATION_MILLISECONDS);\r\n    graph.push(this.state.OUT_PKTS[rand].OUT_PKTS);\r\n    graph.push(this.state.IN_PKTS[rand].IN_PKTS);\r\n    graph.push(this.state.OUT_BYTES[rand].OUT_BYTES);\r\n    graph.push(this.state.IN_BYTES[rand].IN_BYTES);\r\n    graph.push(this.state.TCP_FLAGS[rand].TCP_FLAGS);\r\n    graph.push(this.state.L7_PROTO[rand].L7_PROTO);\r\n\r\n\r\n\r\n   \r\n\r\n    // [\"IPV4_SRC_ADDR\",\"L4_SRC_PORT\",\"IPV4_DST_ADDR\",\"L4_DST_PORT\",\"PROTOCOL\",\"L7_PROTO\",\r\n    //                    \"IN_BYTES\",\"OUT_BYTES\",\"IN_PKTS\",\"OUT_PKTS\",\"TCP_FLAGS\",\"FLOW_DURATION_MILLISECONDS\"\r\n    //                     ]\r\n\r\n    simulationData.push(this.state.IPV4_SRC_ADDR[rand].IPV4_SRC_ADDR);\r\n    simulationData.push(this.state.L4_SRC_PORT[rand].L4_SRC_PORT);\r\n    simulationData.push(this.state.IPV4_DST_ADDR[rand].IPV4_DST_ADDR);\r\n    simulationData.push(this.state.L4_DST_PORT[rand].L4_DST_PORT);\r\n    simulationData.push(this.state.PROTOCOL[rand].PROTOCOL);\r\n    simulationData.push(this.state.L7_PROTO[rand].L7_PROTO);\r\n    simulationData.push(this.state.IN_BYTES[rand].IN_BYTES);\r\n    simulationData.push(this.state.OUT_BYTES[rand].OUT_BYTES);\r\n    simulationData.push(this.state.IN_PKTS[rand].IN_PKTS);\r\n    simulationData.push(this.state.OUT_PKTS[rand].OUT_PKTS);\r\n    simulationData.push(this.state.TCP_FLAGS[rand].TCP_FLAGS);\r\n    simulationData.push(this.state.FLOW_DURATION_MILLISECONDS[rand].FLOW_DURATION_MILLISECONDS);\r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n  \r\n      \r\n\r\n\r\n\r\n    binary_result.push(this.state.Label[rand].Label);\r\n\r\n    this.setState(prevState => ({\r\n      Binary_result: [...prevState.Binary_result, binary_result[0]]\r\n    }))\r\n\r\n\r\n    type_result.push(this.state.Attack[rand].Attack);\r\n\r\n    this.setState(prevState => ({\r\n      type_result: [...prevState.type_result, type_result[0]]\r\n    }))\r\n\r\n\r\n\r\n\r\n\r\n    setTimeout(() => {\r\n      console.log(\"rand:\"+rand);\r\n\r\n      console.log(\"simulation data: \", i);\r\n\r\n        \r\n        this.setState({simulationData:simulationData});\r\n        console.log(\"Simulation data!!!!!!!!!!\"+ simulationData);\r\n\r\n        this.postData(simulationData)\r\n\r\n\r\n        this.setState({graph:graph});\r\n        console.log(\"graph!!!!!!!!!!!!!!!!!!!!!!!!!!!!\"+graph)\r\n\r\n        console.log(\"Binary Result\", binary_result, \"  type of attack\", type_result);\r\n\r\n\r\n\r\n       \r\n      }, 2000)\r\n\r\n  }\r\n\r\n  getFighterB(param) {\r\n    const indexB = this.state.selectOptionsNames.indexOf(param);\r\n    const FighterB = [];\r\n    if (indexB !== -1) {\r\n      // this.setState({FighterB:[]}) // reset array before setting new data\r\n      FighterB.push(this.state.selectOptionsNames[indexB].Name);\r\n      FighterB.push(this.state.height[indexB].Height);\r\n      FighterB.push(this.state.WEIGHT[indexB].WEIGHT);\r\n      FighterB.push(this.state.REACH[indexB].REACH);\r\n      FighterB.push(this.state.STANCE[indexB].STANCE);\r\n      FighterB.push(this.state.DOB[indexB].DOB);\r\n      FighterB.push(this.state.SLpM[indexB].SLpM);\r\n      FighterB.push(this.state.strikeAccuracy[indexB].StrAcc);\r\n      FighterB.push(this.state.SApM[indexB].SApM);\r\n      FighterB.push(this.state.strDef[indexB].strDef);\r\n      FighterB.push(this.state.tdAvg[indexB].tdAvg);\r\n      FighterB.push(this.state.tdAcc[indexB].tdAcc);\r\n      FighterB.push(this.state.tdDef[indexB].tdDef);\r\n      FighterB.push(this.state.subAvg[indexB].subAvg);\r\n    }\r\n    this.setState({ FighterB: FighterB });\r\n    this.setState({ Response1: false });\r\n    this.setState({ undWin: \"\" });\r\n    this.setState({ draw: \"\" });\r\n  }\r\n\r\n\r\n\r\n  async saveData() {\r\n\r\n\r\n\r\n      setTimeout(() => {\r\n\r\n      let data = [\r\n        {\r\n          \"subject\": \"injection\",\r\n          \"Correct\": this.state.injection_correct,\r\n          \"Incorrect\": this.state.injection_incorrect,\r\n          'fullMark': 20,\r\n        },\r\n      \r\n        {\r\n          \"subject\": \"ddos\",\r\n          \"Correct\": this.state.ddos_correct,\r\n          \"Incorrect\":this.state.ddos_incorrect,\r\n          \"fullMark\": 10,\r\n        },\r\n        {\r\n          \"subject\": \"Benign\",\r\n          \"Correct\": this.state.Benign_correct,\r\n          \"Incorrect\": this.state.Benign_incorrect,\r\n          \"fullMark\": 10,\r\n        },\r\n        {\r\n          \"subject\": \"password\",\r\n          \"Correct\": this.state.password_correct,\r\n          \"Incorrect\": this.state.password_incorrect,\r\n          \"fullMark\": 10,\r\n        },\r\n        {\r\n          \"subject\": \"xss\",\r\n          \"Correct\": this.state.xss_incorrect,\r\n          \"Incorrect\": this.state.xss_incorrect,\r\n          \"fullMark\": 10,\r\n        },\r\n        {\r\n          \"subject\": \"Scanning\",\r\n          \"Correct\": this.state.scanning_correct,\r\n          \"Incorrect\":  this.state.scanning_incorrect,\r\n          \"fullMark\": 10,\r\n        },\r\n        {\r\n          \"subject\": \"Dos\",\r\n          \"Correct\": this.state.dos_correct,\r\n          \"Incorrect\": this.state.dos_Incorrect,\r\n          \"fullMark\": 10,\r\n        }, {\r\n          \"subject\": \"backdoor\",\r\n          \"Correct\": this.state.backdoor_correct,\r\n          \"Incorrect\": this.state.backdoor_incorrect,\r\n          \"fullMark\": 10,\r\n        }, {\r\n          \"subject\": \"mitm\",\r\n          \"Correct\": this.state.mitm_correct,\r\n          \"Incorrect\": this.state.mitm_incorrect,\r\n          \"fullMark\": 10,\r\n        },\r\n              {\r\n          \"subject\": \"ransom\",\r\n          \"Correct\": this.state.ransomware_correct,\r\n          \"Incorrect\": this.state.ransomware_incorrect,\r\n          \"fullMark\": 10,\r\n        },\r\n        {\r\n          \"subject\": \"Binary_ML\",\r\n          \"Correct\": this.state.Binary_total_correct,\r\n          \"Incorrect\": this.state.Binary_total_wrong,\r\n          \"fullMark\": 10,\r\n            },\r\n            {\r\n              \"subject\": \"Random Forest\",\r\n              \"Correct\": this.state.Random_total_correct,\r\n              \"Incorrect\": this.state.Random_total_wrong,\r\n              \"fullMark\": 10,\r\n          },\r\n          {\r\n            \"subject\": \"Skorch\",\r\n            \"Correct\": this.state.skorch_total_correct,\r\n            \"Incorrect\": this.state.skorch_total_wrong,\r\n            \"fullMark\": 10,\r\n          },\r\n              \r\n      \r\n    ];\r\n\r\n\r\n\r\n    console.log(\"Total correct :  \" ,this.state.Random_total_correct,this.state.skorch_total_correct, this.state.Binary_total_correct)\r\n\r\n\r\n\r\n\r\n    \r\n\r\n    // if (this.state.FighterA.length > 0 && this.state.FighterB.length > 0) {\r\n    //   predictData = this.state.FighterA.concat(this.state.FighterB);\r\n    // }\r\n\r\n\r\n\r\n    const axios = require(\"axios\");\r\n\r\n    // axios.post('http://localhost:5000/predict', predictData)\r\n    //   .then(function (response) {\r\n    //     console.log(response);\r\n    //   })\r\n\r\n    const res = axios({\r\n      //prod env\r\n      url: \"/api/react_api\",\r\n      //dev env\r\n      // url: \"http://127.0.0.1:5000//api/saveData\",\r\n      method: \"POST\",\r\n      data: data,\r\n      // `headers` are custom headers to be sent\r\n      headers: { form: \"form\" },\r\n    })\r\n      .then((response) => {\r\n\r\n        this.setState({Random_total_correct:0});\r\n        this.setState({Random_total_wrong:0});\r\n        this.setState({skorch_total_correct:0});\r\n        this.setState({skorch_total_wrong:0});\r\n        this.setState({binary_total_correct:0});\r\n        this.setState({binary_total_wrong:0});\r\n        this.setState({injection_correct : 0})\r\n        this.setState({injection_incorrectcorrect : 0})\r\n        this.setState({ddos_correct : 0})\r\n        this.setState({ddos_incorrect : 0})\r\n        this.setState({Benign_correct : 0})\r\n        this.setState({Benign_incorrect : 0})\r\n        this.setState({password_correct : 0})\r\n        this.setState({password_incorrect : 0})\r\n        this.setState({xss_correct :0})\r\n        this.setState({xss_incorrect : 0})\r\n        this.setState({scanning_correct : 0})\r\n        this.setState({scanning_incorrect : 0})\r\n        this.setState({injection_correct : 0})\r\n        this.setState({injection_incorrect : 0})\r\n        this.setState({dos_correct :0})\r\n        this.setState({dos_Incorrect : 0})\r\n        this.setState({mitm_correct : 0})\r\n        this.setState({mitm_incorrect : 0})\r\n        this.setState({ransomware_correct : 0})\r\n        this.setState({ransomware_incorrect : 0})\r\n\r\n\r\n\r\n\r\n      console.log(\"Saving data response : \", response.data)\r\n\r\n\r\n      })\r\n      .catch(() => {\r\n        console.log(\"internal Server Error\");\r\n      });\r\n\r\n    // console.log(\"Prediction Data: \",data);\r\n    }, 1000)\r\n\r\n    \r\n\r\n    // console.log(res)\r\n  }\r\n\r\n  async postData(data) {\r\n    setTimeout(() => {\r\n\r\n      let predictData;\r\n\r\n    // if (this.state.FighterA.length > 0 && this.state.FighterB.length > 0) {\r\n    //   predictData = this.state.FighterA.concat(this.state.FighterB);\r\n    // }\r\n\r\n\r\n\r\n    predictData = this.state.simulationData;\r\n\r\n    const axios = require(\"axios\");\r\n\r\n    // axios.post('http://localhost:5000/predict', predictData)\r\n    //   .then(function (response) {\r\n    //     console.log(response);\r\n    //   })\r\n\r\n    const res = axios({\r\n      //prod env\r\n      url: \"/api/react_api\",\r\n      //dev env\r\n      // url: \"http://127.0.0.1:5000//api/react_api\",\r\n      method: \"POST\",\r\n      data: data,\r\n      // `headers` are custom headers to be sent\r\n      headers: { form: \"form\" },\r\n    })\r\n       .then((response) => {\r\n\r\n        //result\r\n        let binary_prediction = [];\r\n        let rand_prediction =[];\r\n        let skorch_nn_prediction =[];\r\n\r\n\r\n        // this.setState({graph:[]});\r\n        // this.setState({simulationDatsa:[]});\r\n        // this.props.setStats(data)\r\n        // this.props.setStats(data);\r\n        // this.props.stats.push(data)\r\n        // console.log(\"tetsing 2nd \", this.props.stats)\r\n\r\n\r\n\r\n        console.log(\"ML predictions\",response.data);\r\n        this.setState({ Response: true });\r\n        // this.setState({ Response1: true });\r\n\r\n        let main_prediction = Number(response.data.MAIN_BINARY);\r\n        let random_forest_prediction = response.data.RAND_PREDICTIOB;\r\n        let skorch_prediction = response.data.SKORCH_PREDICTION;\r\n\r\n        // console.log(\"20 error\", random_forest_prediction,skorch_prediction, response.data)\r\n\r\n        // #0 injection     468539\r\n        // #1 ddos          326345\r\n        // #2 Benign        270279 free from virus\r\n        // #3 password      156299\r\n        // #4 xss            99944\r\n        // #5 scanning       21467\r\n        // #6 Dos            17717\r\n        // #7 backdoor       17247\r\n        // #8 mitm            1295\r\n        // #9 ransomware       142\r\n\r\n        switch(random_forest_prediction) {\r\n          case \"0\":\r\n            random_forest_prediction = \"injection\";\r\n            break;\r\n          case \"1\":\r\n            random_forest_prediction = \"ddos\";\r\n            break;\r\n          case \"2\":\r\n            random_forest_prediction = \"Benign\";\r\n            break;\r\n          case \"3\":\r\n            random_forest_prediction = \"password\";\r\n            break;\r\n          case \"4\":\r\n            random_forest_prediction = \"xss\";\r\n            break;\r\n          case \"5\":\r\n            random_forest_prediction = \"scanning\";\r\n          break;\r\n            case \"6\":\r\n              random_forest_prediction = \"injection\";\r\n            break;\r\n          case \"7\":\r\n            random_forest_prediction = \"Dos\";\r\n            break;\r\n          case \"8\":\r\n            random_forest_prediction = \"mitm\";\r\n            break;\r\n          case \"9\":\r\n            random_forest_prediction = \"ransomware\";\r\n          break;\r\n        }\r\n\r\n        switch(skorch_prediction) {\r\n          case \"0\":\r\n            skorch_prediction = \"injection\";\r\n            break;\r\n          case \"1\":\r\n            skorch_prediction = \"ddos\";\r\n            break;\r\n          case \"2\":\r\n            skorch_prediction = \"Benign\";\r\n            break;\r\n          case \"3\":\r\n            skorch_prediction = \"password\";\r\n            break;\r\n          case \"4\":\r\n            skorch_prediction = \"xss\";\r\n            break;\r\n          case \"5\":\r\n            skorch_prediction = \"scanning\";\r\n          break;\r\n            case \"6\":\r\n              skorch_prediction = \"injection\";\r\n            break;\r\n          case \"7\":\r\n            skorch_prediction = \"Dos\";\r\n            break;\r\n          case \"8\":\r\n            skorch_prediction = \"mitm\";\r\n            break;\r\n          case \"9\":\r\n            skorch_prediction = \"ransomware\";\r\n            break;   \r\n        }\r\n\r\n\r\n\r\n        //setting for graphs \r\n\r\n        if(this.state.index != this.state.selected_quanltity)\r\n        {\r\n          // let rand_prediction =[];\r\n          // let skorch_nn_prediction =[];\r\n    \r\n          \r\n          console.log(\"number of result back\", this.state.index+1);\r\n          binary_prediction.push(main_prediction);\r\n          rand_prediction.push(random_forest_prediction);\r\n          skorch_nn_prediction.push(skorch_prediction);\r\n\r\n          console.log(\"main binary prediciton\", binary_prediction);\r\n\r\n\r\n          this.setState(prevState => ({\r\n            Binary_prediction: [...prevState.Binary_prediction, binary_prediction[0]]\r\n          }))\r\n          this.setState(prevState => ({\r\n            Random_prediction: [...prevState.Random_prediction, rand_prediction[0]]\r\n          }))\r\n\r\n          // this.state.skorch_total_wrong\r\n          this.setState(prevState => ({\r\n            skorch_prediction: [...prevState.skorch_prediction, skorch_nn_prediction[0]]\r\n          }))\r\n\r\n\r\n          console.log(\"SKorch prediction\", this.state.skorch_prediction);\r\n          console.log(\"Rand prediction\", this.state.Random_prediction);\r\n\r\n\r\n\r\n\r\n\r\n          this.setState({index:this.state.index+1});\r\n        }\r\n        \r\n        if(this.state.index == this.state.selected_quanltity)\r\n\r\n        {\r\n          \r\n\r\n          console.log(\"Binary Actual\", this.state.Binary_result,this.state.Binary_prediction);\r\n          console.log(\"Binary type A\", typeof( this.state.Binary_result[0]));\r\n\r\n\r\n      \r\n          console.log(\"SKorch Actual\",this.state.type_result, this.state.skorch_prediction);\r\n          console.log(\"Random Actual\",this.state.type_result, this.state.Random_prediction);\r\n\r\n\r\n\r\n          for(let i =0; i < this.state.selected_quanltity;  i++)\r\n          {\r\n\r\n\r\n            if (this.state.Binary_result[i] == this.state.Binary_prediction[i] && this.state.Binary_prediction[i] !== 'undefined')\r\n            {\r\n               \r\n\r\n                this.setState({\r\n                    Binary_total_correct : this.state.Binary_total_correct +1\r\n                });\r\n\r\n                // Sets Color to Gree for the right Prediction\r\n                this.setState({favWin:true});\r\n                this.setState({undWin:false});\r\n\r\n\r\n              \r\n\r\n            }\r\n\r\n             else if (this.state.Binary_result[i] != this.state.Binary_prediction[i] && this.state.Binary_result[i]  !== 'undefined') \r\n            {\r\n\r\n                this.setState({\r\n                  Binary_total_wrong : this.state.Binary_total_wrong +1\r\n                });\r\n\r\n                // Sets Color to red for wrong prediciotn\r\n                this.setState({undWin:true});\r\n                this.setState({favWin:false});\r\n\r\n\r\n\r\n\r\n              }\r\n\r\n \r\n\r\n\r\n            if (this.state.type_result[i] == this.state.Random_prediction[i] && this.state.Random_prediction[i]  !== 'undefined')\r\n            {\r\n                this.setState({\r\n                  Random_total_correct : this.state.Random_total_correct +1\r\n                });\r\n            }\r\n            else  if (this.state.type_result[i] != this.state.Random_prediction[i] &&  this.state.Random_prediction[i] !== 'undefined')\r\n            {\r\n                this.setState({\r\n                  Random_total_wrong : this.state.Random_total_wrong +1\r\n                });\r\n            }\r\n\r\n\r\n             //skorch\r\n              \r\n             if (this.state.type_result[i] == this.state.skorch_prediction[i] && this.state.skorch_prediction[i] !== 'undefined')\r\n             {\r\n                 this.setState({\r\n                   skorch_total_correct : this.state.skorch_total_correct +1\r\n                 });\r\n             }\r\n              else if (this.state.type_result[i] != this.state.skorch_prediction[i] && this.state.skorch_prediction[i]  !== 'undefined')\r\n             {\r\n\r\n                 this.setState({\r\n                   skorch_total_wrong : this.state.skorch_total_wrong +1\r\n                 });\r\n             }\r\n\r\n\r\n             switch(this.state.type_result[i]) {\r\n              case \"injection\":\r\n                    if(this.state.skorch_prediction[i] == this.state.type_result[i] ||this.state.Random_prediction[i] == this.state.type_result[i]) \r\n                    {\r\n                        this.setState({injection_correct : this.state.injection_correct+1})\r\n                    }\r\n                    else\r\n                    {\r\n                      this.setState({injection_incorrectcorrect : this.state.injection_incorrect+1})\r\n                    }\r\n                break;\r\n              case \"ddos\":\r\n                    if(this.state.skorch_prediction[i] == this.state.type_result[i] || this.state.Random_prediction[i] == this.state.type_result[i])\r\n                    {\r\n                        this.setState({ddos_correct : this.state.ddos_correct+1})\r\n                    }\r\n                    else\r\n                    {\r\n                      this.setState({ddos_incorrect : this.state.ddos_incorrect+1})\r\n                    }\r\n                    break;\r\n              case \"Benign\":\r\n                    if(this.state.skorch_prediction[i] == this.state.type_result[i] || this.state.Random_prediction[i] == this.state.type_result[i])\r\n                    {\r\n                        this.setState({Benign_correct : this.state.Benign_correct+1})\r\n                    }\r\n                    else\r\n                    {\r\n                      this.setState({Benign_incorrect : this.state.Benign_incorrect+1})\r\n                    }\r\n                break;\r\n              case \"password\":\r\n                    if(this.state.skorch_prediction[i] == this.state.type_result[i] || this.state.Random_prediction[i] == this.state.type_result[i])\r\n                    {\r\n                        this.setState({password_correct : this.state.password_correct+1})\r\n                    }\r\n                    else\r\n                    {\r\n                      this.setState({password_incorrect : this.state.password_incorrect+1})\r\n                    }\r\n                break;\r\n              case \"xss\":\r\n                    if(this.state.skorch_prediction[i] == this.state.type_result[i] || this.state.Random_prediction[i] == this.state.type_result[i])\r\n                    {\r\n                        this.setState({xss_correct : this.state.xss_incorrect+1})\r\n                    }\r\n                    else\r\n                    {\r\n                      this.setState({xss_incorrect : this.state.xss_incorrect+1})\r\n                    }\r\n               break;\r\n              case \"scanning\":\r\n                   if(this.state.skorch_prediction[i] == this.state.type_result[i] || this.state.Random_prediction[i] == this.state.type_result[i])\r\n                    {\r\n                        this.setState({scanning_correct : this.state.scanning_correct+1})\r\n                    }\r\n                    else\r\n                    {\r\n                      this.setState({scanning_incorrect : this.state.scanning_correct+1})\r\n                    }\r\n              break;\r\n                case \"injection\":\r\n                  if(this.state.skorch_prediction[i] == this.state.type_result[i] || this.state.Random_prediction[i] == this.state.type_result[i])\r\n                  {\r\n                      this.setState({injection_correct : this.state.injection_incorrect+1})\r\n                  }\r\n                  else\r\n                  {\r\n                    this.setState({injection_incorrect : this.state.injection_incorrect+1})\r\n                  }\r\n                break;\r\n              case \"Dos\":\r\n                if(this.state.skorch_prediction[i] == this.state.type_result[i] || this.state.Random_prediction[i] == this.state.type_result[i])\r\n                  {\r\n                      this.setState({dos_correct : this.state.dos_correct+1})\r\n                  }\r\n                  else\r\n                  {\r\n                    this.setState({dos_Incorrect : this.state.dos_Incorrect+1})\r\n                  }\r\n                break;\r\n              case \"mitm\":\r\n                if(this.state.skorch_prediction[i] == this.state.type_result[i] || this.state.Random_prediction[i] == this.state.type_result[i])\r\n                {\r\n                    this.setState({mitm_correct : this.state.mitm_correct+1})\r\n                }\r\n                else\r\n                {\r\n                  this.setState({mitm_incorrect : this.state.mitm_incorrect+1})\r\n                }                break;\r\n              case \"ransomware\":\r\n                if(this.state.skorch_prediction[i] == this.state.type_result[i] || this.state.Random_prediction[i] == this.state.type_result[i])\r\n                  {\r\n                      this.setState({ransomware_correct : this.state.ransomware_correct+1})\r\n                  }\r\n                  else\r\n                  {\r\n                    this.setState({ransomware_incorrect : this.state.ransomware_incorrect+1})\r\n                  }\r\n                break;   \r\n            }\r\n\r\n          }\r\n\r\n          this.setState({draw:true})\r\n\r\n\r\n\r\n\r\n          console.log(\"Resetting\")\r\n          this.setState({\r\n            Binary_result: []\r\n          })\r\n      \r\n          this.setState({\r\n            type_result: []\r\n          })\r\n          this.setState({\r\n            Binary_prediction: []\r\n          })\r\n      \r\n          this.setState({\r\n            skorch_prediction: []\r\n          })\r\n\r\n          this.setState({\r\n            Random_prediction: []\r\n          })\r\n      \r\n\r\n\r\n\r\n\r\n          this.setState({index:0});\r\n        }\r\n\r\n\r\n      })\r\n      .catch((e) => {\r\n        console.log(\"PostData internal Server Error\",e);\r\n      });\r\n\r\n    console.log(\"Prediction Data: \",data);\r\n    }, 1000)\r\n\r\n    \r\n\r\n    // console.log(res)\r\n  }\r\n\r\n\r\n  \r\n// multiple simulation\r\n   multi_simulation() {\r\n    console.log(\"I work\");\r\n   \r\n    let index = this.state.selected_quanltity\r\n    \r\n   while(index >0)\r\n   {\r\n    if(index != 0)\r\n    {\r\n      \r\n      // this.myButton.click()\r\n      this.setGraph(index);\r\n\r\n\r\n    }\r\n    // this.postData()\r\n    // setTimeout(() => {\r\n    //   this.postData();\r\n\r\n    // }, 1000)\r\n\r\n\r\n    index--;\r\n\r\n   }\r\n   \r\n\r\n    \r\n  }\r\n\r\n  // const Grids = (props) => <Grid container {...props} />\r\n  // const GridCol = (props) => <Grid container direction ='column'{...props} />\r\n  // const GridRow = (props) => <Grid container direction ='row'{...props} />\r\n  // const Item = (props) => <Grid item {...props} />\r\n\r\n  render() {\r\n    const data = [\r\n      {\r\n        name: \"FLOW_DURATION\",\r\n        uv: 0,\r\n        pv:  this.state.graph[0],\r\n        amt: this.state.graph[0],\r\n      },\r\n      {\r\n        name: \"OUT_PKTS\",\r\n        uv: 0,\r\n        pv:  this.state.graph[1],\r\n        amt: this.state.graph[1],\r\n      },\r\n      {\r\n        name: \"IN_PKTS\",\r\n        uv: 0,\r\n        pv:  this.state.graph[2],\r\n        amt: this.state.graph[2],\r\n      },\r\n      {\r\n        name: \"OUT_BYTES\",\r\n        uv: 0,\r\n        pv:  this.state.graph[3],\r\n        amt: this.state.graph[3],\r\n      },\r\n      {\r\n        name: \"IN_BYTES\",\r\n        uv: 0,\r\n        pv:  this.state.graph[4],\r\n        amt: this.state.graph[4],\r\n      },\r\n      {\r\n        name: \"TCP_FLAGS\",\r\n        uv: 0,\r\n        pv:  this.state.graph[5],\r\n        amt: this.state.graph[5],\r\n      },\r\n      {\r\n        name: \"L7_PROTO\",\r\n        uv: 0,\r\n        pv:  this.state.graph[6],\r\n        amt: this.state.graph[6],\r\n      },\r\n    ];\r\n\r\n    const { classes } = this.props;\r\n    const bull = <span className={classes.bullet}>•</span>;\r\n    return (\r\n      <React.Fragment>\r\n        <Box p={5}>\r\n          <GridRow>\r\n            <Item xs={12}>\r\n              <GridRow spacing={10}>\r\n                <Item xs={12} lg={6}>\r\n                  <Card\r\n                    elevation={6}\r\n                    className={\r\n                      // classes.draw : classes.Win : classes.Loss : classes.root\r\n                       this.state.favWin ?  classes.Win: this.state.undWin ? classes.Loss ? this.state.draw : classes.draw : classes.root\r\n                    }\r\n                  >\r\n                    <CardActionArea>\r\n                      <CardActions>\r\n                      \r\n                        <GridRow justify=\"center\" alignItems=\"center\">\r\n                        <Typography variant=\"h7\" component=\"h1\">\r\n                            DATA \r\n                          </Typography>\r\n                          <Item xs={12}>\r\n                            <ResponsiveContainer width={1200} height={500}>\r\n                              <ComposedChart\r\n                                layout=\"vertical\"\r\n                                width={600}\r\n                                height={400}\r\n                                data={data}\r\n                                margin={{\r\n                                  top: 20,\r\n                                  right: 100,\r\n                                  bottom: 20,\r\n                                  left: 100,\r\n                                }}\r\n                              >\r\n                                <CartesianGrid stroke=\"#f5f5f5\" />\r\n                                <XAxis type=\"number\" />\r\n                                <YAxis\r\n                                  dataKey=\"name\"\r\n                                  type=\"category\"\r\n                                  scale=\"band\"\r\n                                />\r\n                                <Tooltip />\r\n                                <Legend />\r\n                                <Area\r\n                                  dataKey=\"amt\"\r\n                                  fill=\"#8884d8\"\r\n                                  stroke=\"#8884d8\"\r\n                                />\r\n                                <Bar dataKey=\"pv\" barSize={20} fill=\"#413ea0\" />\r\n                                <Line dataKey=\"uv\" stroke=\"#ff7300\" />\r\n                              </ComposedChart>\r\n                            </ResponsiveContainer>\r\n                          </Item>\r\n                        </GridRow>\r\n                      </CardActions>\r\n                    </CardActionArea>\r\n                  </Card>\r\n                  <GridRow>\r\n                    <Item>\r\n                      <Box p={1.5}>\r\n                        <Paper styles={classes.paper}>\r\n                          <Autocomplete\r\n                            id=\"FighterA\"\r\n                            options={this.state.simulation_sample}\r\n                            // getOptionLabel={(option) => option.Name}\r\n                            style={{ width: 500 }}\r\n                            onChange={(event, value) => this.getQuantity(value)} // sends Index of selected Item Fighter A\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Simulation Quantity\"\r\n                                variant=\"outlined\"\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Paper>\r\n                      </Box>\r\n\r\n                      <Item\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                      >\r\n                        <label htmlFor=\"contained-button-file\">\r\n                          <Button\r\n                            size=\"large\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.saveData}\r\n                            component=\"span\"\r\n                          >\r\n                            Save Data\r\n                          </Button>\r\n                          <Button\r\n                            size=\"large\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.setGraph}\r\n                            component=\"span\"\r\n                            ref={(ref) => { this.myButton = ref; }}\r\n                          >\r\n                            Graph test\r\n                          </Button>\r\n                          <Button\r\n                            size=\"large\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.multi_simulation}\r\n                            component=\"span\"\r\n                          >\r\n                            Multiple simulation\r\n                          </Button>\r\n\r\n                          \r\n                        </label>\r\n                        <h1>{/*{this.state.Response}*/}</h1>\r\n                      </Item>\r\n                    </Item>\r\n                  </GridRow>\r\n                </Item>\r\n              </GridRow>\r\n            </Item>\r\n          </GridRow>\r\n        </Box>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// export default class ComboBox\r\nexport default withStyles(useStyle)(ProfessorMMA);\r\n","/* eslint-disable no-use-before-define */\r\nimport React,{useEffect,useState} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios'\r\nimport FighterData from '../DATA/fighterDataset.json'\r\nimport { Button } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box'\r\nimport {clearCache} from \"clear-cache\"\r\n\r\n// import { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip} from 'recharts';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  Cell,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ReferenceLine,\r\n} from 'recharts';\r\n\r\nimport { Radar, RadarChart, PolarGrid, Legend, PolarAngleAxis, PolarRadiusAxis, ResponsiveContainer } from 'recharts';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\n\r\n\r\n\r\n\r\n      // abstract Grid\r\n\r\n     const Grids = (props) => <Grid container {...props} />\r\n     const GridCol = (props) => <Grid container direction ='column'{...props} />\r\n     const GridRow = (props) => <Grid container direction ='row'{...props} />\r\n     const Item = (props) => <Grid item {...props} />\r\n\r\n\r\n\r\n\r\nconst useStyle = theme => ({\r\n  toolbarMargin: {\r\n    ...theme.mixins.toolbar,\r\n    marginBottom: \"1em\",\r\n    [theme.breakpoints.down(\"xs\")]:{\r\n      marginBottom: \"1.5em\",\r\n\r\n    },\r\n  },\r\n  logo: {\r\n    // height:\"100px\",\r\n    width: \"16em\",\r\n    [theme.breakpoints.down(\"md\")]:{\r\n      height: \"5em\",\r\n      width: \"17em\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]:{\r\n      height: \"5.5em\",\r\n      width: \"19em\",\r\n\r\n    },\r\n\r\n  },\r\n  paper:{\r\n     display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n       marginTop:theme.spacing(200),\r\n      margin: theme.spacing(30),\r\n      width: theme.spacing(300),\r\n      height: theme.spacing(16)\r\n    }\r\n  },\r\n   root: {\r\n      backgroundColor: '#FAFAFA',\r\n    minWidth: 200,\r\n     minHeight:300,\r\n  },\r\n  Win: {\r\n      backgroundColor: '#BCE6DA',\r\n    minWidth: 200,\r\n     minHeight:300,\r\n  },\r\n Loss: {\r\n  backgroundColor:'#F0A89C',\r\nminWidth: 200,\r\n minHeight:300,\r\n},\r\n    draw:{\r\n        backgroundColor: '#F0E79C',\r\n        minWidth: 200,\r\n        minHeight:300,\r\n\r\n    },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\n\r\nclass Statistics extends React.PureComponent {\r\nconstructor(props){\r\n    super(props)\r\n    this.state = {\r\n      selectOptionsNames : [],\r\n      height: [],\r\n      DOB:[],\r\n      SApM:[],\r\n      SLpM:[],\r\n      REACH:this.props.stats[3],\r\n      STANCE:[],\r\n      WEIGHT:[],\r\n      strikeAccuracy:[],\r\n      strDef:[],\r\n      tdAcc:[],\r\n      subAvg:[],\r\n      tdDef:[],\r\n      tdAvg:[],\r\n      FighterA:[],\r\n      FighterB:[],\r\n      Response:false,\r\n      Response1:false,\r\n      Favourite: '',\r\n      UnderDog: '',\r\n      favWin:false,\r\n      undWin:false,\r\n      draw:false,\r\n      // new \r\n      subject :[\"hello\",\"dello\"],\r\n      Correct :[0,0,90,0,0,0,0,0,0,0],\r\n      Incorrect :[1],\r\n      fullMark :[],\r\n      chart:[],\r\n      charttwo:[],\r\n      radarB:false,\r\n\r\n      // fixedOptions:[\"hello\"],\r\n      // value:[...this.fixedOptions, this.FighterA]\r\n    }\r\n    this.getFighterA = this.getFighterA.bind(this);\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  async getOptions(){\r\n    const res = await axios.get('/static/satistics.json')\r\n    // const res = await axios.get('http://127.0.0.1:5000/static/satistics.json')\r\n\r\n    const data = res.data\r\n    const subject =[]\r\n    const Incorrect =[]\r\n    const Correct =[]\r\n    const fullMark =[]\r\n\r\n    console.log(\"The Data\", data)\r\n\r\n\r\n    for(let i =0; i< res.data.length ;i++){\r\n      // console.log(\"Data data\",data.subject)\r\n\r\n      console.log(data[i][\"subject\"])\r\n      console.log()\r\n      \r\n      if (data[i][\"subject\"] !== undefined) {\r\n\r\n        subject.push(data[i][\"subject\"]);\r\n        Incorrect.push(data[i][\"Incorrect\"] );\r\n        Correct.push(Number(data[i][\"Correct\"]));\r\n        fullMark.push(data[i][\"fullMark\"]);\r\n      }\r\n\r\n\r\n    }\r\n\r\n\r\n      this.setState({ subject: subject});\r\n      this.setState({ Incorrect: Incorrect});\r\n      this.setState({ Correct: Correct });\r\n      this.setState({ fullMark: fullMark });\r\n   \r\n\r\n  }\r\n    componentDidMount(){\r\n      this.getOptions()\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  getFighterA(param){\r\n    const indexA = this.state.selectOptionsNames.indexOf(param);\r\n    const FighterA=[]\r\n    let radar_one = []\r\n\r\n\r\n         const convertRange =( value, min , max) => {\r\n\r\n                for (let i = 0; i < value[0].length; i++)\r\n                {\r\n                    if(max - min === 0) return 1;\r\n                    value[0][i] = (value[0][i] - min) / (max - min);\r\n\r\n                }\r\n                return value[0];\r\n            };\r\n\r\n\r\n    if(indexA !== -1 ){\r\n      // this.setState({FighterA:[]}) // reset array before setting new data\r\n      FighterA.push(this.state.selectOptionsNames[indexA].Name)\r\n      FighterA.push(this.state.height[indexA].Height)\r\n      FighterA.push(this.state.WEIGHT[indexA].WEIGHT)\r\n      FighterA.push(this.state.REACH[indexA].REACH)\r\n      FighterA.push(this.state.STANCE[indexA].STANCE)\r\n      FighterA.push(this.state.DOB[indexA].DOB)\r\n      FighterA.push(this.state.SLpM[indexA].SLpM)\r\n      FighterA.push(this.state.strikeAccuracy[indexA].StrAcc)\r\n      FighterA.push(this.state.SApM[indexA].SApM)\r\n      FighterA.push(this.state.strDef[indexA].strDef)\r\n      FighterA.push(this.state.tdAvg[indexA].tdAvg)\r\n      FighterA.push(this.state.tdAcc[indexA].tdAcc)\r\n      FighterA.push(this.state.tdDef[indexA].tdDef)\r\n      FighterA.push(this.state.subAvg[indexA].subAvg)\r\n\r\n       radar_one.push(FighterA.slice(1,2).concat(FighterA.slice(3 ,4)).concat(FighterA.slice(6,13)));\r\n        console.log(\"radarone \" ,radar_one)\r\n        radar_one[0][0] = radar_one[0][0] * 30\r\n        radar_one[0][2] = radar_one[0][2] * 10\r\n        radar_one[0][4] = radar_one[0][4] * 10\r\n        radar_one[0][6] = radar_one[0][6] * 10\r\n\r\n            let chart = convertRange(radar_one ,2 ,10)\r\n            this.setState({chart:chart});\r\n\r\n\r\n    }else{\r\n            this.setState({chart:radar_one});\r\n            this.setState({FighterB:FighterA});\r\n    }\r\n\r\n    // console.log(\"Chart\",chart)\r\n    this.setState({FighterA:FighterA})\r\n    this.setState({Response:false});\r\n    this.setState({undWin:false});\r\n    this.setState({draw:false});\r\n  }\r\n\r\n    getFighterB(param){\r\n    const indexB = this.state.selectOptionsNames.indexOf(param);\r\n    const FighterB=[]\r\n    let radar_two = []\r\n\r\n     const convertRange =( value, min , max) => {\r\n\r\n            for (let i = 0; i < value[0].length; i++)\r\n            {\r\n                if(max - min === 0) return 1;\r\n                value[0][i] = (value[0][i] - min) / (max - min);\r\n\r\n            }\r\n            return value[0];\r\n        };\r\n\r\n    if(indexB!== -1 ){\r\n      // this.setState({FighterB:[]}) // reset array before setting new data\r\n      FighterB.push(this.state.selectOptionsNames[indexB].Name)\r\n      FighterB.push(this.state.height[indexB].Height)\r\n      FighterB.push(this.state.WEIGHT[indexB].WEIGHT)\r\n      FighterB.push(this.state.REACH[indexB].REACH)\r\n      FighterB.push(this.state.STANCE[indexB].STANCE)\r\n      FighterB.push(this.state.DOB[indexB].DOB)\r\n      FighterB.push(this.state.SLpM[indexB].SLpM)\r\n      FighterB.push(this.state.strikeAccuracy[indexB].StrAcc)\r\n      FighterB.push(this.state.SApM[indexB].SApM)\r\n      FighterB.push(this.state.strDef[indexB].strDef)\r\n      FighterB.push(this.state.tdAvg[indexB].tdAvg)\r\n      FighterB.push(this.state.tdAcc[indexB].tdAcc)\r\n      FighterB.push(this.state.tdDef[indexB].tdDef)\r\n      FighterB.push(this.state.subAvg[indexB].subAvg)\r\n\r\n\r\n        radar_two.push(FighterB.slice(1,2).concat(FighterB.slice(3 ,4)).concat(FighterB.slice(6,13)));\r\n        console.log(\"Radar Two \" ,radar_two)\r\n        radar_two[0][0] = radar_two[0][0] * 30\r\n        radar_two[0][2] = radar_two[0][2] * 10\r\n        radar_two[0][4] = radar_two[0][4] * 10\r\n        radar_two[0][6] = radar_two[0][6] * 10\r\n\r\n            let chart = convertRange(radar_two ,2 ,10)\r\n            this.setState({charttwo:chart});\r\n\r\n    }\r\n    else{\r\n            this.setState({charttwo:radar_two});\r\n            this.setState({FighterB:FighterB});\r\n    }\r\n\r\n        this.setState({FighterB:FighterB});\r\n\r\n\r\n  }\r\n\r\n\r\n     // const Grids = (props) => <Grid container {...props} />\r\n     // const GridCol = (props) => <Grid container direction ='column'{...props} />\r\n     // const GridRow = (props) => <Grid container direction ='row'{...props} />\r\n     // const Item = (props) => <Grid item {...props} />\r\n\r\n    //  const data = res.data\r\n    //  const subject =[]\r\n    //  const Incorrect =[]\r\n    //  const Correct =[]\r\n    //  const fullMark =[]\r\n \r\n\r\n  render(){\r\n    const { classes } = this.props;\r\n    const bull = <span className={classes.bullet}>•</span>;\r\n// data[i][\"Correct\"]\r\n    console.log(\"log testing\",this.state.Correct)\r\n    console.log(\"log testing\",this.state.subject)\r\n\r\n\r\n    const data = [\r\n  {\r\n    subject: this.state.subject[0],\r\n    'Correct': this.state.Correct[0],\r\n    'InCorrect': this.state.Incorrect[0],\r\n    fullMark: 20,\r\n  },\r\n\r\n  {\r\n    subject: this.state.subject[1],\r\n    'Correct': this.state.Correct[1],\r\n    'InCorrect': this.state.Incorrect[1],\r\n    fullMark: 10,\r\n  },\r\n  {\r\n    subject: this.state.subject[2],\r\n    'Correct': this.state.Correct[2],\r\n    'InCorrect': this.state.Incorrect[2],\r\n    fullMark: 20,\r\n  },\r\n  {\r\n    subject: this.state.subject[3],\r\n    'Correct': this.state.Correct[3],\r\n    'InCorrect': this.state.Incorrect[3],\r\n    fullMark: 20,\r\n  },\r\n  {\r\n    subject: this.state.subject[4],\r\n    'Correct': this.state.Correct[4],\r\n    'InCorrect': this.state.Incorrect[4],\r\n    fullMark: 20,\r\n  },\r\n {\r\n    subject: this.state.subject[5],\r\n    'Correct': this.state.Correct[5],\r\n    'InCorrect': this.state.Incorrect[5],\r\n    fullMark: 20,\r\n  },\r\n {\r\n    subject: this.state.subject[6],\r\n    'Correct': this.state.Correct[6],\r\n    'InCorrect': this.state.Incorrect[6],\r\n    fullMark: 20,\r\n  }, {\r\n    subject: this.state.subject[7],\r\n    'Correct': this.state.Correct[7],\r\n    'InCorrect': this.state.Incorrect[7],\r\n    fullMark: 20,\r\n  }, {\r\n    subject: this.state.subject[8],\r\n    'Correct': this.state.Correct[8],\r\n    'InCorrect': this.state.Incorrect[8],\r\n    fullMark: 20,\r\n  },\r\n  {\r\n    subject: this.state.subject[9],\r\n    'Correct': this.state.Correct[9],\r\n    'InCorrect': this.state.Incorrect[9],\r\n    fullMark: 20,\r\n  },\r\n  {\r\n    subject: this.state.subject[10],\r\n    'Correct': this.state.Correct[10],\r\n    'InCorrect': this.state.Incorrect[10],\r\n    fullMark: 20,\r\n  },\r\n  {\r\n    subject: this.state.subject[11],\r\n    'Correct': this.state.Correct[11],\r\n    'InCorrect': this.state.Incorrect[11],\r\n    fullMark: 20,\r\n  },\r\n  {\r\n    subject: this.state.subject[12],\r\n    'Correct': this.state.Correct[12],\r\n    'InCorrect': this.state.Incorrect[12],\r\n    fullMark: 20,\r\n  },\r\n\r\n];\r\n\r\n    return (\r\n\r\n    <React.Fragment>\r\n       <Box p={0}>\r\n        \r\n\r\n           <GridCol>\r\n\r\n                  <Box p={15}>\r\n                      <Item xs={12} lg={12}>\r\n                               <GridCol  justify=\"center\" alignItems=\"center\">\r\n                                   <Item>\r\n                                        <Card elevation={3} className={this.state.Response1?  this.state.draw ?  classes.draw : this.state.undWin ? classes.Win: classes.Loss : classes.root}>\r\n                                    <CardActionArea>\r\n                                        <CardActions>\r\n                                            <CardContent>\r\n                                                <Typography variant=\"h7\" component=\"h1\">\r\n                                                   Radar Chart\r\n                                                 </Typography>\r\n\r\n                                            </CardContent>\r\n                                        </CardActions>\r\n                                         <GridRow justify=\"center\" alignItems=\"center\">\r\n                                        <Item xs={12}>\r\n                                             <ResponsiveContainer width={1200} height={500}>\r\n                                                <RadarChart cx=\"50%\" cy=\"45%\" outerRadius=\"85%\" data={data}>\r\n                                                  <PolarGrid />\r\n                                                  <PolarAngleAxis dataKey=\"subject\" />\r\n                                                  <PolarRadiusAxis angle={40} domain={[0, 10]} />\r\n                                                  <Radar name={this.state.FighterA[0]} dataKey='Correct' stroke=\"#fc9992\" fill=\"#fc9992\" fillOpacity={0.6} />\r\n                                                  <Radar  name={this.state.FighterB[0]} dataKey='InCorrect' stroke=\"#a3eef0\" fill=\"#a3eef0\" fillOpacity={0.6} />\r\n                                                  <Legend />\r\n                                                </RadarChart>\r\n                                            </ResponsiveContainer>\r\n                                        </Item>\r\n                                     </GridRow>\r\n                                    </CardActionArea>\r\n                                </Card>\r\n                                   </Item>\r\n\r\n                               </GridCol>\r\n                      </Item>\r\n                  </Box>\r\n\r\n                  <Box p={10}>\r\n                      <Item xs={12} lg={12}>\r\n                               <GridCol  justify=\"center\" alignItems=\"center\">\r\n                                   <Item>\r\n                                        <Card  elevation={3} className={this.state.Response1?  this.state.draw ?  classes.draw : this.state.undWin ? classes.Win: classes.Loss : classes.root}>\r\n                                    <CardActionArea>\r\n                                        <CardActions>\r\n                                            <CardContent>\r\n                                                <Typography variant=\"h7\" component=\"h1\">\r\n                                                   Bar Chart\r\n                                                 </Typography>\r\n\r\n                                            </CardContent>\r\n                                        </CardActions>\r\n                                         <GridRow justify=\"center\" alignItems=\"center\">\r\n                                        <Item xs={12}>\r\n                                            <ResponsiveContainer width={1200} height={500}>\r\n                                                <BarChart\r\n                                                  width={900}\r\n                                                  height={300}\r\n                                                  data={data}\r\n                                                  stackOffset=\"sign\"\r\n                                                  margin={{\r\n                                                    top: 5,\r\n                                                    right: 5,\r\n                                                    left: 5,\r\n                                                    bottom: 5,\r\n                                                  }}\r\n                                                >\r\n                                                  <CartesianGrid strokeDasharray=\"1 1\" />\r\n                                                  <XAxis dataKey=\"subject\" />\r\n                                                  <YAxis />\r\n                                                  <Tooltip />\r\n                                                  <Legend />\r\n                                                  <ReferenceLine y={0} stroke=\"#000\" />\r\n                                                   <Bar dataKey=\"Correct\" stackId=\"a\" fill=\"#8884d8\" />\r\n                                                   <Bar dataKey='InCorrect' stackId=\"a\" fill=\"#82ca9d\" />\r\n                                                </BarChart>\r\n                                            </ResponsiveContainer>\r\n                                        </Item>\r\n                                     </GridRow>\r\n                                    </CardActionArea>\r\n                                </Card>\r\n                                   </Item>\r\n\r\n                               </GridCol>\r\n                      </Item>\r\n                  </Box>\r\n\r\n\r\n\r\n            </GridCol>\r\n\r\n       </Box>\r\n\r\n    </React.Fragment>\r\n\r\n  );\r\n  }\r\n}\r\n\r\n\r\n\r\n// export default class ComboBox\r\nexport default withStyles(useStyle)(Statistics)\r\n\r\n","import React,{useState} from 'react'\r\nimport Header from \"./UI/Header\"\r\nimport {ThemeProvider} from '@material-ui/core/styles';\r\nimport {BrowserRouter,Route,Switch}  from 'react-router-dom'\r\nimport  theme from \"./UI/Theme\"\r\nimport ProfessorMMA from \"./UI/fighterPage\";\r\nimport Statistics from \"./UI/statistics\";\r\n\r\n\r\nfunction App() {\r\n  const [value, setValue] = useState(0);\r\n  const [stats, setStats] = useState([]);\r\n\r\n  console.log(\"2nd order components\", stats[3])\r\n  console.log(\"2nd order value\", value)\r\n\r\n\r\n  // let props = {\r\n  //   stats ,\r\n  //   setStats,\r\n  // }\r\n\r\n  return (\r\n   <ThemeProvider theme ={theme}>\r\n     <BrowserRouter>\r\n     <Header value={value} setValue={setValue} stats={stats} setStats={setStats}/>\r\n      <Switch>\r\n      {/* <LandingPage /> */}\r\n        <Route exact path=\"/\" component={()=> <div style={{height: \"2000px\"}} >Landing page</div>}/>\r\n        <Route exact path=\"/Project\" render={() => (\r\n          <ProfessorMMA stats={stats} setStats={setStats} />\r\n        ) }/>\r\n        <Route exact path=\"/chart\" render={()=>(<Statistics  stats={stats}/>)}/>\r\n        <Route exact path=\"/contact\" component={()=> <div style={{height: \"2000px\"}} >contact</div> }/>\r\n      </Switch>\r\n     </BrowserRouter>\r\n   </ThemeProvider>\r\n      \r\n    \r\n  \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}